dnl Configure input script for httpget
dnl Process this file with autoconf to produce a configure script.
dnl Copyright (C) Whiteley Research Inc, 2002
dnl $Id: configure.in,v 1.1 2008/05/08 04:59:32 stevew Exp $

dnl *** Initialize
AC_INIT(comm.cc)
AC_SUBST(prefix)

dnl *** Setup configure args

dnl --enable-qt[=config_dir]
dnl link with qt
link_qt="no"
AC_ARG_ENABLE(qt,    [  ]--enable-qt[[=config_dir]]             link with qt,
if test $enable_qt != yes -a $enable_qt != no; then
    QTDIR=$enable_qt
    export QTDIR
    link_qt=yes
elif test $enable_qt = yes; then
    link_qt=yes
fi
)

dnl --enable-gtk[=config_dir]
dnl link with gtk
link_gtk="no"
AC_ARG_ENABLE(gtk,   [  ]--enable-gtk[[=config_dir]]            link with gtk1,
if test $enable_gtk != yes -a $enable_gtk != no; then
    gtkloc="$enable_gtk"
    gtklocd="$enable_gtk/"
    link_gtk= yes
elif test $enable_gtk = yes; then
    link_gtk=yes
fi
)

dnl --enable-gtk2[=config_dir]
dnl link with gtk2
link_gtk2="no"
AC_ARG_ENABLE(gtk2,  [  ]--enable-gtk2[[=config_dir]]           link with gtk2,
if test $enable_gtk2 != yes -a $enable_gtk2 != no; then
    gtkloc="$enable_gtk"
    gtklocd="$enable_gtk/"
    link_gtk2= yes
elif test $enable_gtk2 = yes; then
    link_gtk2=yes
fi
)

dnl *** Check build environment
AC_PROG_CC
dnl text for MS Windows environmnet
AC_CYGWIN
AC_MINGW32
if test x$MINGW32 = x"yes"; then
    NTSUFFIX=".exe"
    FILTER="|sed -e s///"
elif test x$CYGWIN = x"yes"; then
    NTSUFFIX=".exe"
fi
AC_SUBST(NTSUFFIX)
AC_SUBST(FILTER)
AC_PROG_MAKE_SET
AC_PROG_RANLIB
if test -f /bin/arch; then
    if test "`/bin/arch`" = "sun4"; then
        SUN4=yes
    fi
fi
if test "$GCC" = yes; then
    DEPEND_PROG="gcc -MM"
    if test x$MINGW32 != x"yes" -a x$CYGWIN != x"yes"; then
        LFLAGS="-rdynamic"
    fi
    if test x$SUN4 = x"yes"; then
        dnl Solaris 8 with gcc: the ctype macros use arrays, which
        dnl cause "char subscript" warnings, so these are turned off.
        dnl The __EXTENSIONS__ macro is needed to make certain function
        dnl prototypes visible
        SUN4FLAGS="-Wno-implicit -Wno-char-subscripts -D__EXTENSIONS__"
        CFLAGS="-O -Wall $SUN4FLAGS"
        if test `which ld` = "/usr/ucb/ld" -o \
                `which ld` = "/usr/ccs/bin/ld"; then
            LFLAGS="-Wl,-Bdynamic"
        fi
    else
        CFLAGS="-O -Wall"
        CFLAGSG="-O -g -Wall"
    fi
else
    DEPEND_PROG="cc -M"
    CFLAGS="-O"
fi
if test -x /usr/ucb/install; then
    INSTALL="/usr/ucb/install"
else
    INSTALL="install"
fi
if test "`uname`" = Linux; then
    INSTALL_USER="-o root -g root"
else
    INSTALL_USER="-o root -g bin"
fi
AC_SUBST(CFLAGS)
AC_SUBST(DEPEND_PROG)
AC_SUBST(LFLAGS)
AC_SUBST(INSTALL)
AC_SUBST(INSTALL_USER)

STDCLIB="-lstdc++"
AC_SUBST(STDCLIB)

if test $link_qt = yes; then
    tmpdir="/tmp/__tmp__"
    cwd=`pwd`
    mkdir $tmpdir
    cd $tmpdir
    touch empty.cc
    qmake -project
    qmake
    cd $cwd

    has_qt=no
    if test -f $tmpdir/Makefile; then
        has_qt=yes

        cf=`grep '^CXXFLAGS' $tmpdir/Makefile`
        set $cf
        while test x"$1" != x; do
            y=`echo $1 |grep "^-D"`
            if test x"$y" != x; then
                QT_CFLAGS="$QT_CFLAGS $1"
            fi
            shift
        done
        echo "QT_CFLAGS=$QT_CFLAGS"

        ip=`grep '^INCPATH' $tmpdir/Makefile`
        set $ip
        while test x"$1" != x; do
            y=`echo $1 |grep "^-I"`
            if test x"$y" != x -a $1 != "-I."; then
                QT_INCL="$QT_INCL $1"
            fi
            shift
        done
        echo "QT_INCL=$QT_INCL"

        lf=`grep '^LFLAGS' $tmpdir/Makefile`
        set $lf
        while test x"$1" != x; do
            y=`echo $1 |grep "^-"`
            if test x"$y" != x; then
                QT_LFLAGS="$QT_LFLAGS $1"
            fi
            shift
        done
        echo "QT_LFLAGS=$QT_LFLAGS"

        lb=`grep '^LIBS' $tmpdir/Makefile`
        set $lb
        while test x"$1" != x; do
            y=`echo $1 |grep "^-"`
            if test x"$y" != x; then
                QT_LIBS="$QT_LIBS $1"
            fi
            shift
        done
        echo "QT_LIBS=$QT_LIBS"
    fi
    rm -rf $tmpdir

    if test has_qt = no; then
        echo "Unable to determine QT setup info"
        exit
    fi

    HTP_DEFS="-DUSE_QT"
    QTHFILES='$(QT_HEADERS)'
    QTCCFILES='$(QT_CCFILES)'
    QTMOCFILES='$(QT_MOCFILES)'
    MOC='$(QTDIR)/bin/moc'
    TOOLKITINC="$QT_INCL"
    TOOLKITLIBS="$QT_LIBS"
    TOOLKITCFLAGS="$QT_CFLAGS"
    TOOLKITLFLAGS="$QT_LFLAGS"
elif test $link_gtk2 = yes; then
    AC_CHECK_PROG(have_cfg, pkg-config, "yes", "no", $PATH:$gtkloc)
    if test $have_cfg = yes; then
        ${gtkloc}pkg-config --exists gtk+-2.0
        if test $? = 0; then
            HTP_DEFS="-DUSE_GTK"
            TOOLKITINC="\`${gtklocd}pkg-config --cflags gtk+-2.0\`"
            TOOLKITLIBS="\`${gtklocd}pkg-config --libs gtk+-2.0\`"
        else
            echo "gtk2 not found"
            exit
        fi
    else
        echo "pkg-config not found"
        exit
    fi
elif test $link_gtk = yes; then
    AC_CHECK_PROG(have_cfg, gtk-config, "yes", "no", $PATH:$gtkloc)
    if test $have_cfg = yes; then
        HTP_DEFS="-DUSE_GTK"
        TOOLKITINC="\`${gtklocd}gtk-config --cflags\`"
        TOOLKITLIBS="\`${gtklocd}gtk-config --libs\`"
    else
        echo "gtk-config not found"
        exit
    fi
fi
AC_SUBST(TOOLKITINC)
AC_SUBST(TOOLKITLIBS)
AC_SUBST(TOOLKITCFLAGS)
AC_SUBST(TOOLKITLFLAGS)
AC_SUBST(QTHFILES)
AC_SUBST(QTCCFILES)
AC_SUBST(QTMOCFILES)
AC_SUBST(QTCFLX)
AC_SUBST(QTINCL)
AC_SUBST(MOC)

dnl *** Checks for header files
AC_HEADER_STDC
AC_EGREP_HEADER(sys_errlist, stdio.h, AC_DEFINE(SYS_ERRLIST_DEF))

dnl *** Checks for typedefs, structures, and compiler characteristics
AC_C_CONST
AC_HEADER_TIME
AC_STRUCT_TM
dnl check for socklen_t
dnl AC_CHECK_SOCKTYPE(TYPE, DEFAULT)
AC_DEFUN(AC_CHECK_SOCKTYPE,
[AC_REQUIRE([AC_HEADER_STDC])dnl
AC_MSG_CHECKING(for $1)
AC_CACHE_VAL(ac_cv_type_$1,   
[AC_EGREP_CPP(dnl
changequote(<<,>>)dnl
<<(^|[^a-zA-Z_0-9])$1[^a-zA-Z_0-9]>>dnl
changequote([,]), [#include <sys/types.h>
#include <sys/socket.h> 
#if STDC_HEADERS
#include <stdlib.h>
#include <stddef.h>   
#endif], ac_cv_type_$1=yes, ac_cv_type_$1=no)])dnl
AC_MSG_RESULT($ac_cv_type_$1)
if test $ac_cv_type_$1 = no; then
    AC_DEFINE($1, $2)
fi
])
AC_CHECK_SOCKTYPE(socklen_t, int)
if test $ac_cv_type_socklen_t = "no"; then
    HTP_DEFS="$HTP_DEFS -Dsocklen_t=int"
fi

dnl *** Check for needed libraries
dnl reverse order of link, order is important
AC_CHECK_LIB(m, main)
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(ws2_32, main)
AC_CHECK_LIB(wsock32, main)

AC_SUBST(LIBS)

dnl *** Checks for library functions
AC_CHECK_FUNC(vsnprintf, HTP_DEFS="$HTP_DEFS -DHAVE_VSNPRINTF")
AC_SUBST(HTP_DEFS)

dnl *** Perform subsitutions and create headers
AC_OUTPUT(Makefile)

