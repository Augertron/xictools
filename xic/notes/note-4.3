
----- Begin 4.3.X (Post-Production)

Changes relative to final 4.2 release (4.2.16).

Lots of small things fixed, revealed by valgrind runs.

fixed no name assignment in the Node (Net) Name Mapping panel.  Operation
would fail if names are case-insensitive (the default) and new name contained
lower case.

undoc:
avoid OA warning when opening "chip1b_top.gds nand", tries to open as
OA lib/cell.

----- switch to git code control ------

The commit notes will in large measure replace this file, at least with
respect to documenting small changes.

reversed direction of Ctrl-mouse wheel zoom, to match prevailing standard.

Porting to Fedora-25, which uses gcc-6.
Nasty problem, I have used "this" to check for a null object throughout the
program.  I.e., if (this == 0), it was assumed that one could go ahead and
do useful things without referencing the object.  This would work for simple
objects, without polymorphism.  However, calling a methon on a null object
pointer is technically undefined.  Clang would work, but emit a warning
for (this == 0), which was shut up by ((void*)this == 0).  Gcc-6 will
issue a warning even with the (void*), but allows a new local variable
to be set to this and subsequently tested.  However, it gets worse.
Gcc-6 will seg fault when calling a method through a null pointer, unless
-fno-delete-null-pointer-checks is set.  So, a lot of refactoring is needed.

Begins the process of making sure that no null object pointers are
dereferenced, looks like lots of work.

__attribute__((deprecated)) can be temporarily added to a function
that tests this==0, causing the calls to emit a warning on compilation. 
The calling object can be tested at these locations.

Any method that uses this under the assumption that it may be null needs
attention, e.g. linked lists with things like
for (x = this; x; x = x->next), and the ubiquitous free function.

Remedies:
-  Make the functions static, and pass the pointer.  This is probably
   the easiest/safest approach.  But, some structs will end up with
   all or mostly static methods.  The syntax becomes a bit ugly and
   cluttered.  Did a lot of this.

- Define a macro that will test for a null pointer before a call,
  something like
#define ZCK(foo, bar, baz) (foo ? foo->bar : baz)
#define ZCK(foo, bar) if (foo) foo->bar
   Wrap calls in the macro.  Never did this, too ugly.

-  Find the method calls and add an explicit test for null pointer.
   Did a lot of this.

Fedora networking gave trouble with xic/wrspice ipc.
Set SIGIO to SIG_IGN in Xic and WRspice.  This signal is generated when a
socket status changes.  Maybe some day use this, but for now ignore them
or the program will terminate.

IPC fails if the host name can't be resolved, which was the default.
1.  In VirtualBox, make sure network mapping is set to "Bridge", default
is "NAT" which won't work.
2.  In Fedora Network setup, create a connection that uses the correct
addresses and is manual.
3.  Change the /etc/hostname file.
4.  I also changed the "hosts" in /etc/nsswitch.conf to "files dns",
not sure this was needed.

In the Spice Cmd operation, error messages weren't being handled, fixed.
This was a core leak, too.

Numerous fixes to std via handling internally.

Grid panel changed visually, new screenshot needed in help.

The Color Selection panel was changed and updated to allow setting
opposite-mode colors.  Needs new screen shot.

New environment variable XT_GUI_COMPRESS.  When set, don't allow space
around button contents.  Such space can cause side menu button images to
be truncated on low-res displays.

The !dumpcds command will now output a GDSII layer mapping file in
addition to the tech and drf files.

Done:  Allow !join to join electrical wires.  In memory design from Cadence,
all electrical wire segments are individual wires.  Maybe a join-all-wires
command?
New !jw [-l] command.
Without arg, take the latest selected wire, and join it recursively
to other existing similar wires that share an endpoint.  With -l,
join if possible all wires on the current layer.

!select layer:
1) a hyphen ('-') is now a stand-in for the current layer, but not in
regular expressions.
2) the layer alias name (lppName) is now also tested against the regular
expression.

ToDo: std vias should be handled transparently in all CHD operations.  Vias
are ignored in display mode, compare mode (probably).
DONE, perhaps a bit more checking needed.

Ctrl-click on selected standard via instance now pops up the standard
via parameter setting panel, allowing instance to be changed.  This
panel has visual changes, new screen shot needed.  Slightly different
between via creation mode (from menu) and via update mode.

Made program separable from mozy, which is gnu-tainted.
edit
  mrouter_if.cc (help, setup)
fileio
  fio.cc (httpget upd, net file open)
gtkxic
  gtkmain.cc (htm help, form submit handler)
main
  help_menu.cc (help, initializer, rid this)
  init.cc (help, initialize)
  main_txtcmds.cc (help upd, !helpxxx and !update.!passwd,!proxy cmds)
  main_variables.cc (help, help-related variables)
  oa_if.cc (help, initialization)
bin
  xic.cc (upd, check for updates)

ToDo: Amir Jafari-Salim, Hypres
Hot key to terminate wire creation (polys too).
DONE.  Enter now terminates wires and polys being created.  Also, if the
clicl is within PixelDelta pixels of the target, the wire or poly will be
terminated.  This helps ensure termination with ultra-fine grid setting.

Get rid of XIC_LIBRARY_PATH, doesn't work.
NO.  Xic now starts from a wrapper in xictools/bin, which calls xic
binary in xictools/xic/bin.  the XIC_LIBRARY_PATH is prepended to the
LIBRARY_PATH in the wrapper.

OpenAccess support is back.  The plug-in is supplied with RHEL5-7
releases.  Not for commercial use.

Print panel alterred to provide a Line Width entry for the PS line
draw driver.
The PSlineDraw variable is no longer recognized.

--- release 4.3.1

Removing update checking from program.  This will be handled externally.
remove from docs:
XT_NO_CHECK_UPDATE
XT_UPD_DEBUG
NoCheckUpdate
InstallCmdFormat
!update -> pops up update page in help
!passwd -> (undocumented) prints message about no password needed
!proxy  -> (undocumented) prints "use Options/Set Proxy in help window"

--- release 4.3.2

Fixed seg fault in fio_library.cc when open_cell has null cbin.

FIXED: library references weren't being followed through CHD, e.g.,
expanded cells were blank in display mode.

Selection changes:  A new pop-up applies when there are three or more
cell instances potentially in a selection operation (point or area)
and no selectable geometry.  The Select Instances panel produces a
list of instances with a clickable yes/no to toggle selected status of
each listed instance.  When the selection mechanism is used to choose
instances for some other purpose, the same pop-up, laabelled "Choose
Instances" appears.  The pop-up is modal in either case, meaning all
but the pop-up is locked out while the pop-up is visible.

Fixed! Info command leaving dead object copies in the selection list,
instability results.

Fixed: Script parser, parse of string constants was not expanding
backslash escapes correctly, a\\b would be a\<backspace> instead
of a\b.

Fixed: Logo script function ignored LogoPixelSize variable.

Fixed:  Logo creation, no more caching the width/height of xpm data. 
This causes trouble if the user reuses the same xpm file name but
changes the content.

New system to generate and track instance names in physical mode. 
Each cell instance has a name consisting of the master name, colon
separator, and a 0-based index number in database order.  The index
number is increased by the size of the array when numbering array
instances, to leave space for indexing individual components.  The
instance name is used in the Select/Choose Instances panel, and in the
label of unexpanded physical instances in the drawing windows, and in
the extraction system.  Instance numbers are regenerated when needed,
after a modification which changes the instance list of a cell.
They are stable and reproducible as long as the containing cell and
its hierarchy are unmodified.

In the Xiv feature set, pressing Esc twice now deselects all, same as
in Xic.

Script functions updated:
GetInstanceName()  (support physical instance names)
SetInstanceName()  (descr change)
GetInstanceIdNum() (check sequence validity, descr updated)
GetInstanceAltId() (check sequence validity, return index(). descr updated)
ListSubcells()     (descr change)

New boolean variable NoInstnameLabels
When set, unexpanded instances in physical drawing windows will use master
name (as before) instead of instance name.

ToDo:  optionally retain standard vias in netext files.

ToDo:  preserve or create netname labels in netext files.  Presently,
labels are completely ignored in netext.  Add pin objects, or add
labels somehow?  Net cells have a "netname" property?
