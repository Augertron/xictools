#######################################################################
LOCATION = xic/src/scrkit
#######################################################################

# This will identify the operating system by calling Xic.  If this
# fails, set this to one of the identifiers in thea ifeq tests below.
OSNAME = $(shell xic --v | sed -e "s/^.* //")

# Note that this Makefile can be used for building objects on any of
# the supported operating systems.  Other than for above, you only
# need Xic installed under Windows.

# For Windows, the full path to the directory containing xic.dll,
# change to real location if necessary.
DLL_LOC = c:/usr/local/xictools/bin

# This Makefile originated from this distribution:
#GFX_VERSION = @GFX_VERSION@
#OSNAME = @OSNAME@
#CXX = @CXX@
#CC = @CC@
#CFLAGS = @CFLAGS_S@ @UFLAGS@
#LSHFLAG = @LSHFLAG@
#DEPEND_PROG = @DEPEND_PROG@ @CFLAGS_S@
#FILTER = @FILTER@
#PIC_OPT = @PIC_OPT@
#SOEXT = @SOEXT@

DATE = @DATE@

# Edit the blocks below if necessary.

ifeq ($(OSNAME),Win32)

# Windows, compiler and libraries from win-builds.org.
CXX = /usr/local/win-builds/bin/g++
CC = /usr/local/win-builds/bin/gcc
CFLAGS = -O -Wall -W -Wshadow -Wwrite-strings -pthread 
LSHFLAG = -shared -Wl,--enable-auto-import,--export-all-symbols
DEPEND_PROG = $(CC) -MM -O3 -Wall -W -Wshadow -Wwrite-strings -pthread
FILTER = |sed -e s/C:// -e s///
PIC_OPT = 
SOEXT = dll
WINLIBS = $(DLL_LOC) -lxic

else ifeq ($(OSNAME),Darwin64)

# Apple OS X Xcode 7 (supports 10.11 El Capitan, 10.10 Yosemite)
CXX = g++
CC = gcc
CFLAGS = -O -Wall -W -Wshadow -Wwrite-strings -pthread -mmacosx-version-min=10.10
LSHFLAG = -dynamiclib -undefined dynamic_lookup
DEPEND_PROG = $(CC) -MM -O3 -Wall -W -Wshadow -Wwrite-strings -pthread
FILTER = 
PIC_OPT = 
SOEXT = dylib

else ifeq ($(OSNAME),LinuxRHEL5)

# Red Hat 5 i686 and similar
CXX = g++ -m32 -march=i686
CC = gcc -m32 -march=i686
CFLAGS = -O -Wall -W -Wshadow -Wwrite-strings -pthread
LSHFLAG = -shared
DEPEND_PROG = $(CC) -MM -O3 -Wall -W -Wshadow -Wwrite-strings -pthread
FILTER =
PIC_OPT = -fPIC
SOEXT = so

else

# Generic Linux, covers all 64-bit builds.
CXX = g++
CC = gcc
CFLAGS = -O -Wall -W -Wshadow -Wwrite-strings -pthread 
LSHFLAG = -shared
DEPEND_PROG = $(CC) -MM -O3 -Wall -W -Wshadow -Wwrite-strings -pthread
FILTER = 
PIC_OPT = -fPIC
SOEXT = so

endif


# Add additional libraries here if needed.
LIBS = $(WINLIBS)

HFILES = \
  miscmath.h \
  scrkit.h \
  si_args.h \
  si_if_variable.h \
  si_scrfunc.h
CCFILES = \
  template.cc
CCOBJS = $(CCFILES:.cc=.o)
INCLUDE = -I.

template.$(SOEXT): template.o
	@echo template.$(SOEXT): linking
	@$(CXX) $(LSHFLAG) -o template.$(SOEXT) template.o $(LIBS)

template.o: template.cc $(HFILES)
	$(CXX) $(CFLAGS) $(PIC_OPT) $(INCLUDE) -c $*.cc

.cc.o:
	$(CXX) $(CFLAGS) $(PIC_OPT) $(INCLUDE) -c $*.cc

ifeq (0,1)
miscmath.h:  $(BASE)/include/miscutil/miscmath.h
	cp -f $(BASE)/include//miscutil/miscmath.h .
si_args.h: ../include/si_args.h
	cp -f ../include/si_args.h .
si_if_variable.h: ../include/si_if_variable.h
	cp -f ../include/si_if_variable.h .
si_scrfunc.h: ../include/si_scrfunc.h
	cp -f ../include/si_scrfunc.h .
endif

clean:

distclean:
	-@rm -rf miscmath.h si_args.h si_if_variable.h si_scrfuncs.h Makefile

