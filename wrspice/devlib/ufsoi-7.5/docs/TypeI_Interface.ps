%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
%		setpapername 
%		manualfeed {true} {papersize} ifelse 
%		{manualpapersize} {false} ifelse 
%		{desperatepapersize} {false} ifelse 
%		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 13 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Helvetica FMFONTDEFINE
3 0 /Helvetica-Bold FMFONTDEFINE
4 0 /Times-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "22" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(22) 496 42.5 T
2 10 Q
(*\050here->MOSGspPtr\051 += -gcgs;) 77.33 713.33 T
(*\050here->MOSSspPtr\051 += -here->MOSsourceConductance;) 77.33 701.33 T
(*\050here->MOSBgPtr\051  += -gcbg;) 77.33 689.33 T
(*\050here->MOSBdpPtr\051 += -\050gcbd + gbd\051;) 77.33 677.33 T
(*\050here->MOSBspPtr\051 += -\050gcbs + gbs\051;) 77.33 665.33 T
(*\050here->MOSDPdPtr\051 += -here->MOSdrainConductance;) 77.33 653.33 T
(*\050here->MOSSPsPtr\051 += -here->MOSsourceConductance;) 77.33 641.33 T
(*\050here->MOSDPdpPtr\051 += \050here->MOSdrainConductance +) 77.33 629.33 T
( mosfetV) 127.37 617.33 T
(ec[SIM_DERIV_IDVD] + gbd +) 166.28 617.33 T
( gcdb + gcds + gcdg\051;) 124.59 605.33 T
(*\050here->MOSDPgPtr\051  += \050mosfetV) 77.33 593.33 T
(ec[SIM_DERIV_IDVG] - gcdg\051;) 231.55 593.33 T
(*\050here->MOSDPbPtr\051  += \050mosfetV) 77.33 581.33 T
(ec[SIM_DERIV_IDVB] - gbd - gcdb\051;) 231.55 581.33 T
(*\050here->MOSDPspPtr\051 += \050mosfetV) 77.33 569.33 T
(ec[SIM_DERIV_IDVS] - gcds\051;) 233.77 569.33 T
(*\050here->MOSSPspPtr\051 += \050here->MOSsourceConductance +) 77.33 557.33 T
(mosfetV) 121.33 545.33 T
(ec[SIM_DERIV_ISVS] +) 157.46 545.33 T
(gbs + gcsb + gcsd + gcsg\051;) 121.33 533.33 T
(*\050here->MOSSPgPtr\051  += \050mosfetV) 77.33 521.33 T
(ec[SIM_DERIV_ISVG] - gcsg\051;) 231 521.33 T
(*\050here->MOSSPbPtr\051  += \050mosfetV) 77.33 509.33 T
(ec[SIM_DERIV_ISVB] - gbs - gcsb\051;) 231 509.33 T
(*\050here->MOSSPdpPtr\051 += \050mosfetV) 77.33 497.33 T
(ec[SIM_DERIV_ISVD] - gcsd\051;) 233.78 497.33 T
(*\050here->MOSBdpPtr\051  += mosfetV) 77.33 485.33 T
(ec[SIM_DERIV_IBVD];) 226.56 485.33 T
(*\050here->MOSBgPtr\051   += mosfetV) 77.33 473.33 T
(ec[SIM_DERIV_IBVG];) 223.78 473.33 T
(*\050here->MOSBspPtr\051  += mosfetV) 77.33 461.33 T
(ec[SIM_DERIV_IBVS];) 226 461.33 T
(*\050here->MOSBbPtr\051   += mosfetV) 77.33 449.33 T
(ec[SIM_DERIV_IBVB];) 223.78 449.33 T
(}) 77.33 425.33 T
1 16 Q
-0.04 (6.0  T) 72 385.33 P
-0.04 (ransforming BSIM3 into a T) 109.42 385.33 P
-0.04 (ype-I Compliant MOS Model) 303.66 385.33 P
0 12 Q
0.73 (The BSIM3 model has been used as a vehicle for demonstrating the T) 72 358 P
0.73 (ype-I model inter-) 415.22 358 P
2.02 (face. The entire source code for the BSIM3V3 T) 72 344 P
2.02 (ype-I compliant MOS Model can be) 320.26 344 P
0.41 (downloaded from the Sematech anonymous ftp site. The source code is intended to dem-) 72 330 P
(onstrate the implementation of the T) 72 316 T
(ype-I interface on a public domain MOS model.) 246.14 316 T
FMENDPAGE
%%EndPage: "22" 1
%%Page: "21" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(21) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
2 10 Q
(env->OPTdefaultMosAS = 0.0;) 113.33 713.33 T
(env->OPTdefaultMosPD = 0.0;) 113.33 701.33 T
(env->OPTdefaultMosPS = 0.0;) 113.33 689.33 T
(env->OPTdefaultMosNRD = 0.0;) 113.33 677.33 T
(env->OPTdefaultMosNRS = 0.0;) 113.33 665.33 T
(    Vbd = Vbs - Vds;) 113.33 641.33 T
(/*) 113.33 617.33 T
(* Evaluate total junction current and conductance) 113.33 605.33 T
(*/) 113.33 593.33 T
(error = MOSdiodeEvaluate\050pMOSmodel, pMOSinstance, &env) 157.33 581.33 T
(, Vbs, Vbd,) 433.64 581.33 T
(*diodeV) 269.33 569.33 T
(ec\051;) 303.8 569.33 T
(if \050error\051 {) 157.33 557.33 T
(errcode = SIMgetError\050buf\051;) 171 545.33 T
(if \050errcode\051 fprintf\050stderr) 171 533.33 T
(, buf\051;) 275.47 533.33 T
(}) 157.33 521.33 T
(/*) 113.33 509.33 T
(*  Evaluate MOS currents and derivatives) 113.33 497.33 T
(*/) 113.33 485.33 T
(error = MOSevaluate\050pMOSmodel, pMOSinst,env) 157.33 473.33 T
(,Vds, Vbs, Vgs, mosfetV) 376.94 473.33 T
(ec\051;) 484.22 473.33 T
(if \050error\051 {) 157.33 461.33 T
(errcode = SIMgetError\050buf\051;) 171 449.33 T
(if \050errcode\051 fprintf\050stderr) 171 437.33 T
(, buf\051;) 275.47 437.33 T
(}) 157.33 425.33 T
(/* Load Currents and Changes as needed by simulator */) 113.33 401.33 T
(/* Since the matrix stamp is \336xed, the matrix must be loaded as shown */) 113.33 377.33 T
(gbs = diodeV) 113.33 365.33 T
(ec[SIM_GBS];) 171.43 365.33 T
(gbd = diodeV) 113.33 353.33 T
(ec[SIM_GBD];) 171.99 353.33 T
(capbs = diodeV) 113.33 341.33 T
(ec[SIM_CAPBS];) 181.99 341.33 T
(capbd = diodeV) 113.33 329.33 T
(ec[SIM_CAPBD];) 182.55 329.33 T
(gcgs = mosfetV) 113.33 305.33 T
(ec[SIM_DERIV_QGVS] * ag0;) 181.98 305.33 T
(gcgd = mosfetV) 113.33 293.33 T
(ec[SIM_DERIV_QGVD] * ag0;) 182.54 293.33 T
(gcgb = mosfetV) 113.33 281.33 T
(ec[SIM_DERIV_QGVB] * ag0;) 182.54 281.33 T
(gcbs = \050mosfetV) 113.33 269.33 T
(ec[SIM_DERIV_QBVS] + capbs\051 * ag0;) 185.31 269.33 T
(gcbd = \050mosfetV) 113.33 257.33 T
(ec[SIM_DERIV_QBVD] + capbd\051 * ag0;) 185.87 257.33 T
(gcbg = mosfetV) 113.33 245.33 T
(ec[SIM_DERIV_QBVG] * ag0;) 182.54 245.33 T
(gcds = mosfetV) 113.33 233.33 T
(ec[SIM_DERIV_QDVS] * ag0;) 181.98 233.33 T
(gcdg = mosfetV) 113.33 221.33 T
(ec[SIM_DERIV_QDVG] * ag0;) 182.54 221.33 T
(gcdb = \050mosfetV) 113.33 209.33 T
(ec[SIM_DERIV_QDVB] + capbd\051 * ag0;) 185.87 209.33 T
(gcsd = mosfetV) 113.33 197.33 T
(ec[SIM_DERIV_QSVD] * ag0;) 181.98 197.33 T
(gcsg = mosfetV) 113.33 185.33 T
(ec[SIM_DERIV_QSVG] * ag0;) 181.98 185.33 T
(gcsb = \050mosfetV) 113.33 173.33 T
(ec[SIM_DERIV_QSVB] + capbs\051 * ag0;) 185.31 173.33 T
(*\050here->MOSDdPtr\051 += here->MOSdrainConductance;) 113.33 149.33 T
(*\050here->MOSGgPtr\051 += gcgb + gcgs + gcgd;) 113.33 137.33 T
(*\050here->MOSSsPtr\051 += here->MOSsourceConductance;) 113.33 125.33 T
(*\050here->MOSBbPtr\051 += gbd + gbs + gcbg + gcbs + gcbd;) 113.33 113.33 T
(*\050here->MOSDdpPtr\051 += -here->MOSdrainConductance;) 113.33 101.33 T
(*\050here->MOSGbPtr\051  += -gcgb;) 113.33 89.33 T
(*\050here->MOSGdpPtr\051 += -gcgd;) 113.33 77.33 T
FMENDPAGE
%%EndPage: "21" 2
%%Page: "20" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(20) 496 42.5 T
1 16 Q
(5.0  Generic Use of the T) 72 709.33 T
(ype-I Interface in a Simulator) 239.23 709.33 T
0 12 Q
0.05 (Section 5.0 covered the internal design details of the T) 72 682 P
0.05 (ype-I Model Interface. The remain-) 333.54 682 P
0.09 (ing code necessary to link the model to the simulator is the glue code. T) 72 668 P
0.09 (asks such as load-) 417.41 668 P
0.26 (ing the admittance matrix, keeping track of nodes, doing transient analyses, and checking) 72 654 P
0.51 (for conver) 72 640 P
0.51 (gence all take place in the glue code or in the simulator itself, depending upon) 121.94 640 P
0.01 (the or) 72 626 P
0.01 (ganization of the simulator) 99.45 626 P
0.01 (. The T) 227.81 626 P
0.01 (ype-I interface does not dictate how this is accom-) 261.98 626 P
1.15 (plished. In fact, each simulator has likely implemented dif) 72 612 P
1.15 (ferent glue code, so the open) 360.29 612 P
(interface is a critical element in installing a model in a wide number of platforms.) 72 598 T
0.34 (A piece of generic code is shown below to illustrate the basic idea for using the model in) 72 572 P
1.11 (any simulation environment. First, all the models and instances are initialized using the) 72 558 P
0.26 (MOSinitModel and MOSinitInst functions. Second, the simulator \336lls in the environment) 72 544 P
0.06 (data structure and calls the evaluate routines for the diodes and mosfets. The SIMgetError) 72 530 P
1.16 (function is called after each function to check for error messages. Finally) 72 516 P
1.16 (, the matrix is) 434.53 516 P
(stamped based upon the values returned from the mosfet and diode evaluate routines.) 72 502 T
2 10 Q
(for \050all_models\051 {) 77.33 483.33 T
(/* initialize parameters in MOS data structure */) 121.33 471.33 T
(/* Set the shrink factor if available from the simulator */) 121.33 459.33 T
(MOSinitModel\050pMOSmodel, &env\051;) 121.33 447.33 T
(errcode = SIMgetError\050buf\051;) 121.33 435.33 T
(if \050errcode\051 fprintf\050stderr) 121.33 423.33 T
(, buf\051;) 225.8 423.33 T
(for \050all_instances\051 {) 121.33 411.33 T
(/* initialize instance parameters from element card */) 134.67 399.33 T
(MOSinitInst\050pMOSmodel, pMOSinst, &env\051;) 134.67 387.33 T
(errcode = SIMgetError\050buf\051;) 134.67 375.33 T
(if \050errcode\051 fprintf\050stderr) 134.67 363.33 T
(, buf\051;) 239.14 363.33 T
(}) 121.33 339.33 T
(}) 77.33 327.33 T
(/*) 77.33 303.33 T
(* This code calls MOSdiodeEvaluate to calculate the current, charge, conductance) 77.33 291.33 T
(* and capacitance of the source and drain diodes. It then calls MOSevaluate) 77.33 279.33 T
(* to calculate the current, charge, conductance, and capacitance of the) 77.33 267.33 T
(* MOS transistor) 77.33 255.33 T
(. Finally) 150.13 255.33 T
(, the matrix is stamped with the results obtained from these) 183.84 255.33 T
(* functions.) 77.33 243.33 T
(*/) 77.33 231.33 T
(struct sMOSmodel *pMOSmodel;) 77.33 207.33 T
(struct sMOSinstance *pMOSinst;) 77.33 195.33 T
(struct SIMenv  *env;) 77.33 183.33 T
(/* load circuit environment variables */) 77.33 159.33 T
(env->CKT) 77.33 147.33 T
(cT) 121.51 147.33 T
(Ok = 273.15;) 132.44 147.33 T
(env->OPTtemp = temperature of circuit; /* deg C */) 77.33 135.33 T
(env->OPTtnom = circuit tnom; /* deg C */) 77.33 123.33 T
(env->OPTgmin = gmin; /* from circuit simulator */) 77.33 111.33 T
(env->OPTdefaultMosL = 1.0e-4;) 77.33 99.33 T
(env->OPTdefaultMosW = 1.0e-4;) 77.33 87.33 T
(env->OPTdefaultMosAD = 0.0;) 77.33 75.33 T
FMENDPAGE
%%EndPage: "20" 3
%%Page: "19" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(19) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
1 14 Q
(4.6  Documentation) 108 710.67 T
0 12 Q
1.3 (A \336nal requirement of the T) 108 684 P
1.3 (ype-I model format is the documentation. The author must) 248.63 684 P
-0.13 (create a table containing a summary of the model and instance data structures. The table is) 108 670 P
(speci\336ed according to the format in Figure) 108 655.82 T
(1) 315.64 655.82 T
(1.) 321.19 655.82 T
1 14 Q
(4.7  T) 108 184.51 T
(esting) 140.55 184.51 T
0 12 Q
2.13 (Sematech benchmark tests number 14-22 should be provided for model validation. A) 108 157.84 P
0.4 (model must match the test results to 0.1% for both NMOS and PMOS devices to be con-) 108 143.84 P
(sidered a correct implementation.) 108 129.84 T
108 63 540 720 C
109.26 213.84 538.74 651.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
112.67 265.79 534.67 649.12 R
7 X
0 0 0 1 0 0 0 K
V
2 10 Q
0 X
(*************************************************************************************************) 118 642.46 T
(MOS instance and model parameter mapping for the T) 118 630.46 T
(ype I MOSFET interface) 359.22 630.46 T
(*************************************************************************************************) 118 618.46 T
(Instance parameters) 118 606.46 T
(***********************) 118 594.46 T
(Name) 118 582.46 T
(Data Structure Slot) 162 582.46 T
(Given Flag) 274 582.46 T
(Description) 405.33 582.46 T
(-------------------------------------------------------------------------------------------------------------------------) 118 570.46 T
(\322l\323) 118 558.46 T
(MOSl) 162 558.46 T
(MOSlGiven) 274 558.46 T
(Length) 405.33 558.46 T
(\050m\051) 503.33 558.46 T
(\322w\323) 118 546.46 T
(MOSw) 162 546.46 T
(MOSwGiven) 274 546.46 T
(Width) 405.33 546.46 T
(\050m\051) 503.33 546.46 T
(\322ad\323) 118 534.46 T
(MOSdrainArea) 162 534.46 T
(MOSdrainAreaGiven) 274 534.46 T
(Drain area) 405.33 534.46 T
(\050m^2\051) 503.33 534.46 T
(\322as\323) 118 522.46 T
(MOSsourceArea) 162 522.46 T
(MOSsourceAreaGiven) 274 522.46 T
(Source area) 405.33 522.46 T
(\050m^2\051) 503.33 522.46 T
(\322pd\323) 118 510.46 T
(MOSdrainPerimeter) 162 510.46 T
(MOSdrainPerimeterGiven) 274 510.46 T
(Drain perimeter) 405.33 510.46 T
(\050m\051) 503.33 510.46 T
(\322ps\323) 118 498.46 T
(MOSsourcePerimeter) 162 498.46 T
(MOSdrainPerimeterGiven) 274 498.46 T
(Source perimeter) 405.33 498.46 T
(\050m\051) 503.33 498.46 T
(Operating Point Output Quantities) 118 474.46 T
(***************************************) 118 462.46 T
(Name) 118 450.46 T
(Data Structure Slot) 162 450.46 T
(Given Flag) 274 450.46 T
(Description) 405.33 450.46 T
(-------------------------------------------------------------------------------------------------------------------------) 118 438.46 T
(\322qinv\323) 118 426.46 T
(MOSqinv) 162 426.46 T
(Inversion charge) 405.33 426.46 T
(\050C\051) 503.33 426.46 T
(\322id\323) 118 414.46 T
(MOScd) 162 414.46 T
(Drain current) 405.33 414.46 T
(\050A\051) 503.33 414.46 T
(\322ibs\323) 118 402.46 T
(MOScbs) 162 402.46 T
(B-S substrate current) 405.33 402.46 T
(\050A\051) 503.33 402.46 T
(Model Parameters) 118 378.46 T
(*********************) 118 366.46 T
(Name) 118 354.46 T
(Data Structure Slot) 162 354.46 T
(Given Flag) 274 354.46 T
(Description) 405.33 354.46 T
(-------------------------------------------------------------------------------------------------------------------------) 118 342.46 T
(\322tox\323) 118 330.46 T
(MOStox) 162 330.46 T
(MOStoxGiven) 274 330.46 T
(oxide thickness) 405.33 330.46 T
(\050m\051) 503.33 330.46 T
(\322vth0\323) 118 318.46 T
(MOSvtho) 162 318.46 T
(MOSvth0Given) 274 318.46 T
(threshold voltage) 405.33 318.46 T
(\050v\051) 503.33 318.46 T
109.33 219.82 531.33 259.15 R
7 X
V
1 F
0 X
(FIGURE 1) 123.08 252.48 T
(1. Pr) 168.92 252.48 T
(ototype template for MOS model documentation. The model documentation) 189.29 252.48 T
(includes the name of all instance and model parameters, the corr) 123.08 242.48 T
(esponding slot in the data) 398.71 242.48 T
(structur) 123.08 232.48 T
(e, the Given \337ag name, a description of the parameters, and the units.) 157.89 232.48 T
108 63 540 720 C
0 -208 1000 792 C
FMENDPAGE
%%EndPage: "19" 4
%%Page: "18" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(18) 496 42.5 T
1 12 Q
(4.5.4  MOS Noise Calculation) 72 712 T
0 F
0.14 (The noise for the parasitic source and drain resistances is obtained from the MOSinstance) 72 686 P
1.26 (data structure. The noise associated with the channel char) 72 672 P
1.26 (ge or channel current and the) 358.1 672 P
(\337icker noise is calculated with the MOSnoiseEvaluate function shown in Figure) 72 657.82 T
(10.) 458.96 657.82 T
72 63 504 720 C
72.67 127.33 503.33 653.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
75.33 171.82 498.67 640.48 R
7 X
0 0 0 1 0 0 0 K
V
3 10 Q
0 X
(-------------Function prototype in MOSdefs.h----------) 80.67 633.82 T
2 F
(/*) 80.67 621.82 T
(* int MOSnoiseEvaluate\050\051) 80.67 609.82 T
(*) 80.67 597.82 T
(* Description: Computes MOS \337icker noise.) 80.67 585.82 T
(*) 80.67 573.82 T
(* Arguments  : SIMEnv *env - Circuit) 80.67 561.82 T
(MOSmodel *model - MOS model structure) 124.67 549.82 T
(*) 80.67 537.82 T
(MOSinstance *here - MOS instance structure) 124.67 537.82 T
(*) 80.67 525.82 T
(double vds,vgs,vbs - MOS terminal voltage dif) 124.67 525.82 T
(ferences) 327.9 525.82 T
(*) 80.67 513.82 T
(double frequency - circuit analysis frequency) 124.67 513.82 T
(*) 80.67 501.82 T
(double *idNoiseSqrd - Return: channel noise) 124.67 501.82 T
(*) 80.67 489.82 T
(double *\337ickerNoiseSqrd - Return: \337icker noise) 124.67 489.82 T
(*) 80.67 477.82 T
(*/) 80.67 465.82 T
(extern int MOSnoiseEvaluate\050MOSmodel *model, MOSinstance *here, double vds,) 80.67 453.82 T
(double vgs, double vbs, double frequency) 124.67 441.82 T
(, double *idNoise_Sqrd,) 308.48 441.82 T
(double *\337ickerNoise_Sqrd\051;) 124.67 429.82 T
3 F
(------------Function template-----------) 80.67 417.82 T
2 F
(int) 80.67 393.82 T
(MOSnoiseEvaluate\050MOSmodel *model, /* MOS model data structure */) 80.67 381.82 T
(MOSinstance *ere,) 124.67 369.82 T
(/* MOS instance data structure */) 236.67 369.82 T
(SIMenv *env) 124.67 357.82 T
(,) 180.62 357.82 T
(/* Circuit environment data */) 236.67 357.82 T
(double vds,vgs,vbs,) 124.67 345.82 T
(/* terminal voltages */) 236.67 345.82 T
(double freq,) 124.67 333.82 T
(/* frequency */) 236.67 333.82 T
(double *idNoiseSqrd,) 124.67 321.82 T
(/* ret: drain noise */) 236.67 321.82 T
(double *\337ickerNoiseSqrd\051 /* ret: \337icker noise */) 124.67 309.82 T
({) 80.67 285.82 T
(/* Calculate noise associated with the channel current or charge.) 80.67 273.82 T
(* Calclulate the \337icker noise.) 80.67 261.82 T
(*/) 80.67 249.82 T
(*idNoiseSqrd = channel noise squared) 80.67 225.82 T
(*\337ickerNoiseSqrd = \337icker noise squared) 80.67 213.82 T
(return \050SIM_OK\051;) 80.67 189.82 T
(}) 80.67 177.82 T
75.33 133.82 498.33 160.82 R
7 X
V
1 F
0 X
(FIGURE 10. Intrinsic MOSFET noise calculation. The function calculates the noise associated) 89.08 154.15 T
(with the channel curr) 89.08 144.15 T
(ent or charge and the \337icker noise.) 180.84 144.15 T
72 63 504 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "18" 5
%%Page: "17" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(17) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
0 12 Q
1.36 (The fourth function is a diode evaluation routine which calculates the current, char) 108 712 P
1.36 (ges,) 521 712 P
1.13 (capacitances, and conductances associated with the source and drain diodes. The proto-) 108 698 P
0.53 (type is shown in Figure) 108 683.82 P
0.53 (9. From the drain-bulk and source-bulk voltages, the appropriate) 225.8 683.82 P
0.03 (results are calculated and returned to the calling function through the diodeV) 108 669.82 P
0.03 (ec data struc-) 475.96 669.82 P
(ture.) 108 655.82 T
108 63 540 720 C
111.26 91.67 536.74 651.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
114.67 154.48 533.33 638.48 R
7 X
0 0 0 1 0 0 0 K
V
3 10 Q
0 X
(-------------Function prototype in MOSdefs.h-------------) 120 631.82 T
2 F
(/*) 120 619.82 T
(* MOSdiodeEvaluate\050\051) 120 607.82 T
(*) 120 595.82 T
(* Description : Calculation of diode current, charges, capacitances, and conductances.) 120 583.82 T
(*) 120 571.82 T
(* Arguments : MOSmodel *model - Model data structure) 120 559.82 T
(*) 120 547.82 T
(MOSinstance *here - Instance data structure) 164 547.82 T
(*) 120 535.82 T
(SIMenv *env - Circuit environment data structure) 164 535.82 T
(*) 120 523.82 T
(double vbd - b-d diode voltage) 164 523.82 T
(*) 120 511.82 T
(double vbs - b-s diode voltage) 164 511.82 T
(*) 120 499.82 T
(double *diodeV) 164 499.82 T
(ec - return vector containing current, charges, capacitances, and) 231.27 499.82 T
(conductances for the diodes.) 276 487.82 T
(*) 120 475.82 T
(*/) 120 463.82 T
(extern int MOSdiodeEvaluate\050 MOSmodel *model, MOSinstance *here, SIMenv *env) 120 451.82 T
(,) 493.85 451.82 T
(double vbd, double vbs, double *diodeV) 164 439.82 T
(ec\051;) 339.67 439.82 T
3 F
(------------Function template----------) 120 427.82 T
2 F
(int) 120 415.82 T
(MOSdiodeEvaluate\050register MOSmodel *model, /* model structure */) 120 403.82 T
(register MOSinstance *here, /* instance structure */) 164 391.82 T
(SIMenv *env) 164 379.82 T
(,) 219.95 379.82 T
(/* circuit environment parameters */) 276 379.82 T
(double vbd,) 164 367.82 T
(/* b-d diode voltage */) 276 367.82 T
(double vbs,) 164 355.82 T
(/* b-s diode voltage */) 276 355.82 T
(double *diodeV) 164 343.82 T
(ec\051) 231.27 343.82 T
(/* return vector */) 276 343.82 T
({) 120 319.82 T
(/* Calculate source and drain diode current, charge, conductance, and capacitance. */) 120 295.82 T
(/* The values are returned through the diodeV) 120 283.82 T
(ec array */) 322.34 283.82 T
(diodeV) 120 271.82 T
(ec[SIM_IBS] = ibs;) 150.58 271.82 T
(diodeV) 120 259.82 T
(ec[SIM_IBD] = ibd;) 150.58 259.82 T
(diodeV) 120 247.82 T
(ec[SIM_GBS] = gbs;) 150.58 247.82 T
(diodeV) 120 235.82 T
(ec[SIM_GBD] = gbd;) 150.58 235.82 T
(diodeV) 120 223.82 T
(ec[SIM_QBS] = qbs;) 150.58 223.82 T
(diodeV) 120 211.82 T
(ec[SIM_QBD] = qbd;) 150.58 211.82 T
(diodeV) 120 199.82 T
(ec[SIM_CAPBS] = capbs;) 150.58 199.82 T
(diodeV) 120 187.82 T
(ec[SIM_CAPBD] = capbd;) 150.58 187.82 T
(}) 120 163.82 T
111.26 100.48 530.59 145.82 R
7 X
V
1 F
0 X
(FIGURE 9. Function template for MOSdiodeEvaluate. The diode evaluate function calculates) 125 139.15 T
(the curr) 125 129.15 T
(ent, charges, conductances, and capacitances associated with the sour) 159.53 129.15 T
(ce and drain) 454.61 129.15 T
(diodes.) 125 119.15 T
108 63 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "17" 6
%%Page: "16" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(16) 496 42.5 T
72 63 504 720 C
74.27 63.02 501.73 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
76.68 121 498.01 704.64 R
7 X
0 0 0 1 0 0 0 K
V
3 10 Q
0 X
(------------Function prototype in MOSdefs.h header \336le----------) 82.01 697.98 T
2 F
(/* MOSevaluate\050\051) 82.01 685.98 T
(* Description : Evaluates currents, charges, capacitances, and conductances for the) 82.01 673.98 T
(*) 82.01 661.98 T
(intrinsic MOS device.) 126.01 661.98 T
(* Arguments : MOSmodel *model - MOS model structure) 82.01 649.98 T
(*) 82.01 637.98 T
(MOSinstance *here - MOS instance structure) 126.01 637.98 T
(*) 82.01 625.98 T
(SIMenv *env - Circuit environment data structure) 126.01 625.98 T
(*) 82.01 613.98 T
(double vds - drain/source voltage) 126.01 613.98 T
(*) 82.01 601.98 T
(double vbs - bulk/source voltage) 126.01 601.98 T
(*) 82.01 589.98 T
(double vgs - gate/source voltage) 126.01 589.98 T
(*) 82.01 577.98 T
(double *mosfetV) 126.01 577.98 T
(ec - vector containing all currents, charges, capacitances and) 198.83 577.98 T
(*) 82.01 565.98 T
(conductances.) 238.01 565.98 T
(*/) 82.01 553.98 T
(extern int MOSevaluate\050 MOSmodel *model, MOSinstance *here, SIMenv *env) 82.01 541.98 T
(,) 430.29 541.98 T
(double vds, double vbs, double vgs, double *mosfetV) 126.01 529.98 T
(ec\051;) 360.59 529.98 T
3 F
(---------Function template---------) 82.01 505.98 T
2 F
(int MOSevaluate\050register MOSmodel *model, /* MOS model structure */) 82.01 493.98 T
(register MOSinstance *here, /* MOS instance structure */) 126.01 481.98 T
(SIMenv *env) 126.01 469.98 T
(,) 181.96 469.98 T
(/* Circuit environment variable structure */) 238.01 469.98 T
(double vds,vbs,vgs,) 126.01 457.98 T
(/* terminal voltages */) 238.01 457.98 T
(double *mosfetV) 126.01 445.98 T
(ec\051) 198.83 445.98 T
(/* return vector */) 238.01 445.98 T
({) 82.01 433.98 T
(/* Calculate MOSFET charge, current, transcapacitance, and conductance */) 82.01 421.98 T
(/* The results are returned to the simulator through the mosfetV) 82.01 409.98 T
(ec array) 361.59 409.98 T
(. */) 396.97 409.98 T
(/* Current and Charges */) 82.01 397.98 T
(mosfetV) 82.01 385.98 T
(ec[SIM_ID] = i_drain; mosfetV) 118.14 385.98 T
(ec[SIM_IG] = i_gate;) 250.7 385.98 T
(mosfetV) 82.01 373.98 T
(ec[SIM_IB] = i_bulk; mosfetV) 118.14 373.98 T
(ec[SIM_IS] = i_source;) 246.26 373.98 T
(mosfetV) 82.01 361.98 T
(ec[SIM_QDRAIN] = qdrain; mosfetV) 118.14 361.98 T
(ec[SIM_QGA) 277.37 361.98 T
(TE] = qgate;) 335.54 361.98 T
(mosfetV) 82.01 349.98 T
(ec[SIM_QBULK] = qbulk; mosfetV) 118.14 349.98 T
(ec[SIM_QSOURCE] = qsource;) 268.49 349.98 T
(/* Conductances and T) 82.01 337.98 T
(ranscapacitances */) 183.36 337.98 T
(mosfetV) 82.01 325.98 T
(ec[SIM_DERIV_IDVD] = dId/dVd; mosfetV) 118.14 325.98 T
(ec[SIM_DERIV_IDVG] = dId/dVg;) 305.17 325.98 T
(mosfetV) 82.01 313.98 T
(ec[SIM_DERIV_IDVB] = dId/dVb; mosfetV) 118.14 313.98 T
(ec[SIM_DERIV_IDVS] = dId/dVs;) 304.62 313.98 T
(mosfetV) 82.01 301.98 T
(ec[SIM_DERIV_IGVD] = dIg/dVd; mosfetV) 118.14 301.98 T
(ec[SIM_DERIV_IGVG] = dIg/dVg;) 305.73 301.98 T
(mosfetV) 82.01 289.98 T
(ec[SIM_DERIV_IGVB] = dIg/dVb; mosfetV) 118.14 289.98 T
(ec[SIM_DERIV_IGVS] = dIg/dVs;) 305.18 289.98 T
(mosfetV) 82.01 277.98 T
(ec[SIM_DERIV_IBVD] = dIb/dVd; mosfetV) 118.14 277.98 T
(ec[SIM_DERIV_IBVG] = dIb/dVg;) 304.62 277.98 T
(mosfetV) 82.01 265.98 T
(ec[SIM_DERIV_IBVB] = dIb/dVb; mosfetV) 118.14 265.98 T
(ec[SIM_DERIV_IBVS] = dIb/dVs;) 304.07 265.98 T
(mosfetV) 82.01 253.98 T
(ec[SIM_DERIV_ISVD] = dIs/dVd; mosfetV) 118.14 253.98 T
(ec[SIM_DERIV_ISVG] = dIs/dVg;) 304.06 253.98 T
(mosfetV) 82.01 241.98 T
(ec[SIM_DERIV_ISVB] = dIs/dVb; mosfetV) 118.14 241.98 T
(ec[SIM_DERIV_ISVS] = dIs/dVs;) 303.51 241.98 T
(mosfetV) 82.01 229.98 T
(ec[SIM_DERIV_QDVD] = dQd/dVd; mosfetV) 118.14 229.98 T
(ec[SIM_DERIV_QDVG] = dQd/dVg;) 315.17 229.98 T
(mosfetV) 82.01 217.98 T
(ec[SIM_DERIV_QDVB] = dQd/dVb; mosfetV) 118.14 217.98 T
(ec[SIM_DERIV_QDVS] = dQd/dVs;) 314.62 217.98 T
(mosfetV) 82.01 205.98 T
(ec[SIM_DERIV_QGVD] = dQg/dVd; mosfetV) 118.14 205.98 T
(ec[SIM_DERIV_QGVG] = dQg/dVg;) 315.73 205.98 T
(mosfetV) 82.01 193.98 T
(ec[SIM_DERIV_QGVB] = dQg/dVb; mosfetV) 118.14 193.98 T
(ec[SIM_DERIV_QGVS] = dQg/dVs;) 315.18 193.98 T
(mosfetV) 82.01 181.98 T
(ec[SIM_DERIV_QBVD] = dQb/dVd; mosfetV) 118.14 181.98 T
(ec[SIM_DERIV_QBVG] = dQb/dVg;) 314.62 181.98 T
(mosfetV) 82.01 169.98 T
(ec[SIM_DERIV_QBVB] = dQb/dVb; mosfetV) 118.14 169.98 T
(ec[SIM_DERIV_QBVS] = dQb/dVs;) 314.07 169.98 T
(mosfetV) 82.01 157.98 T
(ec[SIM_DERIV_QSVD] = dQs/dVd; mosfetV) 118.14 157.98 T
(ec[SIM_DERIV_QSVG] = dQs/dVg;) 314.06 157.98 T
(mosfetV) 82.01 145.98 T
(ec[SIM_DERIV_QSVB] = dQs/dVb; mosfetV) 118.14 145.98 T
(ec[SIM_DERIV_QSVS] = dQs/dVs;) 313.51 145.98 T
(}) 82.01 133.98 T
74.6 64.67 497.27 109.33 R
7 X
V
1 F
0 X
(FIGURE 8. Function template for MOSevaluate. The evaluate function is the heart of the) 88.35 102.67 T
-0.08 (MOSFET model. It calculate the curr) 88.35 92.67 P
-0.08 (ents, charges, capacitances, and conductances. The r) 248.3 92.67 P
-0.08 (esults) 470.96 92.67 P
(ar) 88.35 82.67 T
(e r) 97.61 82.67 T
(eturned in the mosfetV) 108.81 82.67 T
(ec array) 205.93 82.67 T
(. The details of r) 240.64 82.67 T
(eturning the values ar) 310.18 82.67 T
(e best understood by) 403.61 82.67 T
(examining the BSIM3 example.) 88.35 72.67 T
72 63 504 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "16" 7
%%Page: "15" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(15) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
1 12 Q
(4.5.3  MOSFET Evaluation) 108 324.33 T
0 F
1.21 (The T) 108 298.33 P
1.21 (ype-I Model Standard must contain a function to evaluate the MOSFET currents,) 137.37 298.33 P
-0.06 (conductances, changes and transcapacitances given three voltage dif) 108 284.33 P
-0.06 (ferences passed to the) 435.23 284.33 P
2.59 (function. The template for this function is shown in Figure) 108 270.15 P
2.59 (8. The evaluate function) 415.6 270.15 P
0.74 (assumes that the MOS device is operating as an NMOS fet. All changes associated with) 108 256.15 P
2.11 (reverse mode operation of the device are accounted for in the evaluate function. The) 108 242.15 P
1.4 (model should assume that all element parameters are converted to meters and properly) 108 228.15 P
(scaled to the actual dimensions.) 108 214.15 T
108 63 540 720 C
112.59 352.33 535.41 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111.92 389 523.26 706.33 R
7 X
0 0 0 1 0 0 0 K
V
3 10 Q
0 X
(--------Function prototype in MOSdefs.h header \336le----------) 117.26 699.67 T
2 F
(/*) 117.26 687.67 T
(* int MOSinitInst\050\051) 117.26 675.67 T
(*) 117.26 663.67 T
(* Description : Initialize MOSFET instance data structure based on information from the) 117.26 651.67 T
(element card. Calculate any intermediate quantities that depend only on) 161.26 639.67 T
(temperature and length or width.) 161.26 627.67 T
(*) 117.26 615.67 T
(* Arguments : MOSmodel * model - MOS model structure) 117.26 603.67 T
(MOSinstance *here - MOS instance structure) 161.26 591.67 T
(*) 117.26 579.67 T
(SIMenv *env - Circuit environment data structure) 161.26 579.67 T
(*/) 117.26 567.67 T
(extern int MOSinitInst \050 MOSmodel *model, MOSinstance *here, SIMenv *env\051;) 117.26 543.67 T
3 F
(-----------Function template-----------) 117.26 519.67 T
2 F
(int) 117.26 495.67 T
(MOSinitInst\050register MOSmodel *model, /* MOS model parameter structure */) 117.26 483.67 T
(register MOSinstance *here, /* MOS instance structure */) 161.26 471.67 T
(register SIMenv *env\051 /* Environment variable structure */) 161.26 459.67 T
({) 117.26 447.67 T
(/* Put your instance initialization routines here */) 117.26 423.67 T
(}) 117.26 399.67 T
115.92 355.67 529.92 380.33 R
7 X
V
1 F
0 X
(FIGURE 7. Function template for MOSinitInst. The function initializes a MOSFET instance) 129.67 373.67 T
(at a speci\336ed temperatur) 129.67 363.67 T
(e and does parameter checking for the instance parameters.) 235.86 363.67 T
108 63 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "15" 8
%%Page: "14" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(14) 496 42.5 T
1 12 Q
(4.5.2  MOS Model and Instance Initialization) 72 712 T
0 F
0.82 (A T) 72 686 P
0.82 (ype-I compliant model must provide four functions which interface to the simulator) 90.98 686 P
0.82 (.) 501 686 P
1.21 (The integration of the model functions to the simulator was illustrated in Figure) 72 671.82 P
1.21 (2. The) 472.13 671.82 P
0.64 (simulator glue code calls the functions in the T) 72 657.82 P
0.64 (ype-I interface to initialize the model and) 301.56 657.82 P
(instance at a speci\336c temperature and evaluate the current and capacitances for the model.) 72 643.82 T
0.17 (The prototype template for MOSinitModel is shown in Figure) 72 617.63 P
0.17 (6. The function are accom-) 373.69 617.63 P
0.95 (plish three distinct tasks. First, model parameters which are not speci\336ed are assigned a) 72 603.63 P
0.91 (default value. Second, user) 72 589.63 P
0.91 (-speci\336ed values for model parameters are checked to ensure) 204.13 589.63 P
2.22 (that they fall within valid ranges. Third, any temperature speci\336c intermediate model) 72 575.63 P
(quantities that are independent of length and width are calculated.) 72 561.63 T
0.56 (The MOSinitInst function is shown in Figure) 72 159.11 P
0.56 (7. This function is responsible for initializ-) 295.01 159.11 P
0.31 (ing the default values for the instance parameters and checking the validity of user) 72 145.11 P
0.31 (-speci-) 471.35 145.11 P
2.13 (\336ed element values. Any temperature dependent quantities that depend on length and) 72 131.11 P
(width are calculated here.) 72 117.11 T
72 63 504 720 C
75.92 181.3 500.08 557.63 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
78 235.97 493.33 547.3 R
7 X
0 0 0 1 0 0 0 K
V
3 10 Q
0 X
(----------Function prototype in MOSdefs.h header \336le-----------) 83.33 540.63 T
2 F
(/*) 83.33 528.63 T
(* int MOSinitModel\050\051) 83.33 516.63 T
(*) 83.33 504.63 T
(* Description : Initializes MOSFET model data structure. Any parameters not given by the) 83.33 492.63 T
(user are initialized to their) 127.33 480.63 T
(default values. User-speci\336ed values for model) 244.04 480.63 T
(parameters are checked to ensure that they fall within valid ranges. T) 127.33 468.63 T
(emperature) 431.91 468.63 T
(speci\336c intermediate model quantities that are independent of length and width) 127.33 456.63 T
(are calculated.) 127.33 444.63 T
(*) 83.33 432.63 T
(* Arguments : MOSmodel * model - MOS model structure) 83.33 420.63 T
(*) 83.33 408.63 T
(SIMenv *env - Circuit environment data structure) 127.33 408.63 T
(*) 83.33 396.63 T
(*/) 83.33 384.63 T
(extern int MOSinitModel \050 BSIM3model *model, SIMenv *env\051;) 83.33 372.63 T
3 F
(----------Function template-------------) 83.33 348.63 T
2 F
(int MOSinitModel\050register MOSmodel *model, /* MOS model structure */) 83.33 324.63 T
(register SIMenv *env\051) 127.33 312.63 T
( /* Circuit environment data structure */) 239.33 312.63 T
({) 83.33 288.63 T
(/* Put code to initialize the model parameters at a speci\336c temperature here */) 83.33 264.63 T
(}) 83.33 240.63 T
77.92 191.97 493.92 228.63 R
7 X
V
1 F
0 X
-0.36 (FIGURE 6. Function template for MOSinitModel. The function should be designed to initialize) 91.67 221.97 P
(default values for unspeci\336ed model parameters, check model parameter values against the) 91.67 211.97 T
(range of validity) 91.67 201.97 T
(, and initialize any temperatur) 161.12 201.97 T
(e speci\336c intermediate model quantities.) 290.66 201.97 T
72 63 504 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "14" 9
%%Page: "13" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(13) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
108 63 540 720 C
109.58 464.05 538.42 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
113.33 511.52 535.33 702.85 R
7 X
0 0 0 1 0 0 0 K
V
3 10 Q
0 X
(--------------Model data structure in MOSdefs.h header \336le------------) 118.67 696.18 T
2 F
(typedef struct sMOSmodel {       /* model structure for a MOSFET*/) 118.67 672.18 T
(int MOSmodT) 118.67 660.18 T
(ype;    /* type index of this device type */) 179.8 660.18 T
(char *MOSmodName;      /* pointer to character string naming this model */) 118.67 648.18 T
(int MOStype;       /* device type : 1 = nmos,  -1 = pmos */) 118.67 636.18 T
(double MOStox;) 118.67 612.18 T
(double MOSvth0;) 118.67 600.18 T
(.........................) 118.67 588.18 T
(unsigned MOStoxGiven :1;) 118.67 564.18 T
(unsigned MOSvthoGiven :1;) 118.67 552.18 T
(} MOSmodel) 118.67 528.18 T
111.33 470.18 533.33 505.52 R
7 X
V
1 F
0 X
-0.02 (FIGURE 4. Pr) 125.08 498.85 P
-0.02 (ototype model data structur) 186.79 498.85 P
-0.02 (e. At minimum, the model data structur) 305.69 498.85 P
-0.02 (e contains all) 475.35 498.85 P
(MOS model parameters and Given \337ags indicating whether the model parameter is enter) 125.08 488.85 T
(ed by) 504.87 488.85 T
(the user on the .model card.) 125.08 478.85 T
108 63 540 720 C
0 0 612 792 C
108 63 540 720 C
109.58 91 538.42 464.05 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
110 154.72 533.33 454.18 R
7 X
0 0 0 1 0 0 0 K
V
2 10 Q
0 X
(-) 115.33 447.52 T
3 F
(-----------Instance data structure in MOSdefs.h header \336le-------------) 118.66 447.52 T
2 F
(typedef struct sMOSinstance {) 115.33 423.52 T
(/* readin element data */) 115.33 399.52 T
(char *MOSname; /* pointer to character string naming this instance */) 115.33 387.52 T
(double MOSl;) 115.33 363.52 T
(double MOSw;) 115.33 351.52 T
(..............................) 115.33 339.52 T
(/* Precalculated values */) 115.33 327.52 T
(double MOScgdo;) 115.33 315.52 T
(double MOScgso;) 115.33 303.52 T
(..............................) 115.33 291.52 T
(/* OP point */) 115.33 279.52 T
(double MOSdrainConductance;) 115.33 267.52 T
(double MOSsourceConductance;) 115.33 255.52 T
(double MOSqinv;) 115.33 243.52 T
(double MOScd;) 115.33 231.52 T
(..............................) 115.33 219.52 T
(/* GIven \337ags */) 115.33 207.52 T
(unsigned MOSlGiven :1;) 115.33 195.52 T
(unsigned MOSwGiven :1;) 115.33 183.52 T
(}MOSinstance) 115.33 159.52 T
110.58 100.38 533.25 142.38 R
7 X
V
1 F
0 X
(FIGURE 5. Pr) 124.33 135.72 T
(ototype instance data structur) 186.09 135.72 T
(e. The instance data structur) 313.95 135.72 T
(e contains the MOS) 436.26 135.72 T
(element card parameters and Given \337ags to indicate whether the values wer) 124.33 125.72 T
(e given by the user) 447.72 125.72 T
(.) 526.24 125.72 T
(In addition, operating point output information is available in this data structur) 124.33 115.72 T
(e.) 464.75 115.72 T
108 63 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "13" 10
%%Page: "12" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(12) 496 42.5 T
2 10 Q
(#de\336ne SIM_ERR_NOTE     \0501 << 0\051) 77.33 713.33 T
(#de\336ne SIM_ERR_INFO     \0501 << 1\051) 77.33 701.33 T
(#de\336ne SIM_ERR_W) 77.33 689.33 T
(ARNING  \0501 << 2\051) 171.99 689.33 T
(#de\336ne SIM_ERR_ERROR    \0501 << 3\051) 77.33 677.33 T
(#de\336ne SIM_ERR_F) 77.33 665.33 T
(A) 168.48 665.33 T
(T) 174.41 665.33 T
(AL    \0501 << 4\051) 179.78 665.33 T
(#de\336ne SIM_ERR_INTERNAL \0501 << 5\051) 77.33 653.33 T
(#de\336ne SIM_ERR_P) 77.33 641.33 T
(ANIC    \0501 << 6\051) 168.85 641.33 T
(/*) 77.33 617.33 T
( * void SIMwriteError\050\051) 77.33 605.33 T
( *) 77.33 593.33 T
( * Description: W) 77.33 581.33 T
(rite an error message to buf) 151.61 581.33 T
(fer for simualator) 274.26 581.33 T
( *              independent model.) 77.33 569.33 T
( * Arguments  : int \337ags - error code from model) 77.33 557.33 T
( *              char *format :  standard printf-style format string) 77.33 545.33 T
( *              ...          :  argument for the format string) 77.33 533.33 T
( */) 77.33 521.33 T
(extern void SIMwriteError\050int \337ags, char *format, ...\051;) 77.33 509.33 T
(/*) 77.33 485.33 T
( * int SIMgetError\050\051) 77.33 473.33 T
( *) 77.33 461.33 T
( * Description: Return error message buf) 77.33 449.33 T
(fer) 256.1 449.33 T
(.) 267.22 449.33 T
( * Arguments  : char *buf - pointer to storage for text of error message.) 77.33 437.33 T
( * Returns    : Returns error messages generated by model.) 77.33 425.33 T
( *              Access of error messages is accomplished by a Logical) 77.33 413.33 T
( *              AND with each error code.) 77.33 401.33 T
( * Notes      : The user must allocated ERR_BUF_LEN bytes for message storage.) 77.33 389.33 T
( *              The error code and buf) 77.33 377.33 T
(fer are reset in this function.) 224.46 377.33 T
( */) 77.33 365.33 T
(extern int SIMgetError\050char *buf\051;) 77.33 353.33 T
(#endif) 77.33 329.33 T
1 14 Q
(4.5  T) 72 284.67 T
(emplates for Model Sour) 104.55 284.67 T
(ce Code) 252.45 284.67 T
1 12 Q
(4.5.1  Model and Instance Data Structur) 72 252 T
(es) 277.78 252 T
0 F
0.74 (A T) 72 226 P
0.74 (ype-I compliant model must provide a model and instance data structure. The proto-) 90.89 226 P
0.05 (type model data structure is shown in Figure) 72 211.82 P
0.05 (4. It contains the model parameters and \337ags) 289.01 211.82 P
0.78 (to indicate whether the parameter is given by the user in the .model card. The prototype) 72 197.82 P
0.7 (instance data structure is shown in Figure) 72 183.63 P
0.7 (5. It contains the parameters from the element) 278.49 183.63 P
-0.18 (card, any quantities that are calculated once when the models are initialized, and all values) 72 169.63 P
0.02 (that can be printed back to the simulator) 72 155.63 P
0.02 (. Since the MOS model only deals with the intrin-) 264.47 155.63 P
0.08 (sic device, the source and drain conductances must be available in the instance data struc-) 72 141.63 P
(ture.) 72 127.63 T
FMENDPAGE
%%EndPage: "12" 11
%%Page: "11" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(1) 108 42.5 T
(1) 111.7 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
2 10 Q
(#de\336ne SIM_DERIV_ISVG 21) 113.33 713.33 T
(#de\336ne SIM_DERIV_ISVB 22) 113.33 701.33 T
(#de\336ne SIM_DERIV_ISVS 23) 113.33 689.33 T
(#de\336ne SIM_DERIV_QDVD 24) 113.33 677.33 T
(#de\336ne SIM_DERIV_QDVG 25) 113.33 665.33 T
(#de\336ne SIM_DERIV_QDVB 26) 113.33 653.33 T
(#de\336ne SIM_DERIV_QDVS 27) 113.33 641.33 T
(#de\336ne SIM_DERIV_QGVD 28) 113.33 629.33 T
(#de\336ne SIM_DERIV_QGVG 29) 113.33 617.33 T
(#de\336ne SIM_DERIV_QGVB 30) 113.33 605.33 T
(#de\336ne SIM_DERIV_QGVS 31) 113.33 593.33 T
(#de\336ne SIM_DERIV_QBVD 32) 113.33 581.33 T
(#de\336ne SIM_DERIV_QBVG 33) 113.33 569.33 T
(#de\336ne SIM_DERIV_QBVB 34) 113.33 557.33 T
(#de\336ne SIM_DERIV_QBVS 35) 113.33 545.33 T
(#de\336ne SIM_DERIV_QSVD 36) 113.33 533.33 T
(#de\336ne SIM_DERIV_QSVG 37) 113.33 521.33 T
(#de\336ne SIM_DERIV_QSVB 38) 113.33 509.33 T
(#de\336ne SIM_DERIV_QSVS 39) 113.33 497.33 T
(/*) 113.33 473.33 T
( * Circuit environment variables and \337ags) 113.33 461.33 T
( *) 113.33 449.33 T
( * ALL these variables, including \337ags,  must be initialized by the model user) 113.33 437.33 T
( * The standard values for all parameters are shown in the comments here.) 113.33 425.33 T
( * SET THESE P) 113.33 413.33 T
(ARAMETERS from your simulator) 187.06 413.33 T
(.) 337.09 413.33 T
( */) 113.33 401.33 T
(typedef struct sSIMenv {) 113.33 389.33 T
(double CKT) 113.33 377.33 T
(cT) 165.02 377.33 T
(Ok;          /* Conversion from deg C to deg K = 273.15 */) 175.95 377.33 T
(double OPTtemp;          /* Present circuit temperature in degrees C */) 113.33 365.33 T
(double OPTtnom;          /* nominal circuit temperature, in degrees C,) 113.33 353.33 T
(* which is used as the temperature at which the model) 157.33 341.33 T
(* parameters are assumed to have been measured. */) 157.33 329.33 T
(double OPTgmin;          /* Minimum conductance for source/drain junctions */) 113.33 317.33 T
(                             /* scale, areas by scale^2.  Default is 1.0 */) 113.33 305.33 T
(double OPTdefaultMosAD;  /* Default is 0.0 */) 113.33 293.33 T
(double OPTdefaultMosPD;  /* Default is 0.0 */) 113.33 281.33 T
(double OPTdefaultMosNRD; /* Default is 0.0 */) 113.33 269.33 T
(double OPTdefaultMosAS;  /* Default is 0.0 */) 113.33 257.33 T
(double OPTdefaultMosPS;  /* Default is 0.0 */) 113.33 245.33 T
(double OPTdefaultMosNRS; /* Default is 0.0 */) 113.33 233.33 T
(double OPTdefaultMosL;   /* Default is 1.0e-4  */) 113.33 221.33 T
(double OPTdefaultMosW) 113.33 209.33 T
(;   /* Default is 1.0e-4  */) 224.86 209.33 T
(    /* \337ags */) 113.33 185.33 T
(    unsigned int chargeComputationNeeded : 1;) 113.33 173.33 T
(} SIMenv;) 113.33 149.33 T
(/*) 113.33 125.33 T
( * Simulator independent model error handler) 113.33 113.33 T
(.) 312.31 113.33 T
( */) 113.33 101.33 T
(#de\336ne SIM_ERR_BUF_LEN 2000) 113.33 77.33 T
FMENDPAGE
%%EndPage: "11" 12
%%Page: "10" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(10) 496 42.5 T
2 10 Q
( *                   and warning messages from the model.) 77.33 713.33 T
( *) 77.33 701.33 T
( * Global functions:) 77.33 689.33 T
( *) 77.33 677.33 T
( * Local functions :) 77.33 665.33 T
( *) 77.33 653.33 T
( *) 77.33 641.33 T
( * History         :) 77.33 629.33 T
( *) 77.33 617.33 T
( */) 77.33 605.33 T
(#ifndef SIMinterface) 77.33 581.33 T
(#de\336ne SIMinterface \322$Id: SIMinterface.h,v 1.6 1995/1) 77.33 569.33 T
(1/21 01:04:57 david Exp $\323) 316.16 569.33 T
(/*) 77.33 545.33 T
( * Diode vector locations for return values of current, charge,) 77.33 533.33 T
( * conductance, and capacitance.) 77.33 521.33 T
( *) 77.33 509.33 T
( */) 77.33 497.33 T
(#de\336ne SIM_IBS       0) 77.33 485.33 T
(#de\336ne SIM_IBD       1) 77.33 473.33 T
(#de\336ne SIM_GBS       2) 77.33 461.33 T
(#de\336ne SIM_GBD       3) 77.33 449.33 T
(#de\336ne SIM_QBS     4) 77.33 437.33 T
(#de\336ne SIM_QBD     5) 77.33 425.33 T
(#de\336ne SIM_CAPBS       6) 77.33 413.33 T
(#de\336ne SIM_CAPBD       7) 77.33 401.33 T
(/*) 77.33 377.33 T
( * Mosfet V) 77.33 365.33 T
(ector locations for return values of current, charge,) 125.69 365.33 T
( * conductance, and capacitance.) 77.33 353.33 T
( *) 77.33 341.33 T
(*/) 77.33 329.33 T
(#de\336ne SIM_ID         0) 77.33 317.33 T
(#de\336ne SIM_IG         1) 77.33 305.33 T
(#de\336ne SIM_IB         2) 77.33 293.33 T
(#de\336ne SIM_IS         3) 77.33 281.33 T
(#de\336ne SIM_QDRAIN     4) 77.33 269.33 T
(#de\336ne SIM_QGA) 77.33 257.33 T
(TE      5) 157.74 257.33 T
(#de\336ne SIM_QBULK      6) 77.33 245.33 T
(#de\336ne SIM_QSOURCE    7) 77.33 233.33 T
(#de\336ne SIM_DERIV_IDVD 8) 77.33 221.33 T
(#de\336ne SIM_DERIV_IDVG 9) 77.33 209.33 T
(#de\336ne SIM_DERIV_IDVB 10) 77.33 197.33 T
(#de\336ne SIM_DERIV_IDVS 1) 77.33 185.33 T
(1) 203.31 185.33 T
(#de\336ne SIM_DERIV_IGVD 12) 77.33 173.33 T
(#de\336ne SIM_DERIV_IGVG 13) 77.33 161.33 T
(#de\336ne SIM_DERIV_IGVB 14) 77.33 149.33 T
(#de\336ne SIM_DERIV_IGVS 15) 77.33 137.33 T
(#de\336ne SIM_DERIV_IBVD 16) 77.33 125.33 T
(#de\336ne SIM_DERIV_IBVG 17) 77.33 113.33 T
(#de\336ne SIM_DERIV_IBVB 18) 77.33 101.33 T
(#de\336ne SIM_DERIV_IBVS 19) 77.33 89.33 T
(#de\336ne SIM_DERIV_ISVD 20) 77.33 77.33 T
FMENDPAGE
%%EndPage: "10" 13
%%Page: "9" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(9) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
1 14 Q
(4.3  Simulator Interactions) 108 710.67 T
0 12 Q
-0.2 (A T) 108 684 P
-0.2 (ype-I compliant MOS model must also follow certain restrictions regarding its interac-) 125.95 684 P
0.25 (tion to the simulator) 108 670 P
0.25 (. For instance, the model should appear to the simulator as an NMOS) 205.09 670 P
1.12 (device. Thus, the simulator is responsible for distinguishing NMOS and PMOS devices) 108 656 P
0.03 (while the model must do the forward and reverse mode \337ipping. The element scale option) 108 642 P
0.16 (and device multiplier) 108 628 P
0.16 (, \322m\323, are handled by the simulator) 209.82 628 P
0.16 (. The units used in the interaction) 378.74 628 P
0.62 (between the model and simulator must be standardized as follows. Length and width are) 108 614 P
0.14 (speci\336ed in meters, currents in amps, capacitance in farads, voltages in volts, and temper-) 108 600 P
0.08 (ature in celsius. The model must contain space in the instance data structure for quantities) 108 586 P
(necessary to calculate channel noise and the parasitic source and drain conductances.) 108 572 T
1 14 Q
(4.4  Common Header Files and Data Structur) 108 538.67 T
(es) 379.95 538.67 T
0 12 Q
0.52 (Every MOSFET model in the T) 108 512 P
0.52 (ype-I format must include the SIMinterface.h header \336le,) 262.09 512 P
1.49 (which contains de\336nitions for constants, the SIMenv data structure, and error handling) 108 498 P
-0.25 (routines. The SIMinterface.h header \336le is included below) 108 484 P
-0.25 (. The \336rst section of the \336le con-) 385.09 484 P
2.55 (tains de\336nitions for constants that are available to all simulator independent models.) 108 470 P
0.88 (These constants are used to return the currents, char) 108 456 P
0.88 (ges, capacitances, and conductances) 363.76 456 P
(for the MOSFET and diode evaluate functions.) 108 442 T
-0.19 (The second part of the \336le contains the de\336nition for the SIMenv data structure which pro-) 108 416 P
0.76 (vides an avenue to pass variables known by the simulator to the model code. It contains) 108 402 P
2.55 (slots for information such as the circuit temperature, nominal temperature for model) 108 388 P
1.1 (parameter extraction, default MOS lengths and widths and other information needed by) 108 374 P
-0.02 (the model but not available in the model data structure itself. As an example, the tempera-) 108 360 P
0.57 (ture of the circuit is known by the simulator; it can be cleanly passed to the model using) 108 346 P
(this interface.) 108 332 T
0.2 (Finally) 108 306 P
0.2 (, the SIMinterface.h header \336le contains de\336nitions for the error handling routines,) 141.23 306 P
1.88 (SIMwriteError and SIMgetError) 108 292 P
1.88 (. The SIMwriteError function is used by the model to) 267.07 292 P
-0.26 (send an error code, a format string, and an error message to a character buf) 108 278 P
-0.26 (fer) 463.39 278 P
-0.26 (. If any of the) 476.05 278 P
1.39 (interface functions, MOSinitModel, MOSinitInst, MOSevaluate, or MOSdiodeEvaluate,) 108 264 P
0.64 (returns an error) 108 250 P
0.64 (, the simulator code uses the SIMgetError function to read the error mes-) 182.76 250 P
0.69 (sages. When the simulator calls SIMgetError) 108 236 P
0.69 (, the function returns the error code and the) 326.91 236 P
0.27 (error messages for all errors which occurred since the last call to SIMgetError) 108 222 P
0.27 (. The simu-) 484.47 222 P
0.46 (lator can now print the messages, and depending upon whether the error code indicates a) 108 208 P
(fatal error or just a warning message, the simulator can abort or continue the simulation.) 108 194 T
2 10 Q
(/*                               -*- Mode: C -*-) 113.33 175.33 T
( *) 113.33 163.33 T
( * File            : SIMinterface.h) 113.33 151.33 T
( * RCS Info        : $Id: SIMinterface.h,v 1.6 1995/1) 113.33 139.33 T
(1/21 01:04:57 david Exp $) 332.16 139.33 T
( *) 113.33 127.33 T
( * Author          : David Newmark) 113.33 115.33 T
( * Created On      : T) 113.33 103.33 T
(ue Nov 1 10:01:05 1994) 202.45 103.33 T
( *) 113.33 91.33 T
( * Description     : De\336nes environment variable structure for simulator) 113.33 79.33 T
( *                   independent models. De\336nes functions for getting error) 113.33 67.33 T
FMENDPAGE
%%EndPage: "9" 14
%%Page: "8" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(8) 500 42.5 T
0 12 Q
-0.28 (It follows from the assumption of a \336xed topology that additional external nodes cannot be) 72 451 P
-0.12 (added to the T) 72 437 P
-0.12 (ype-I interface model code to handle self-heating or non-quasi static ef) 139.8 437 P
-0.12 (fects.) 478.34 437 P
-0.06 (In addition, the T) 72 423 P
-0.06 (ype-I MOS model cannot support a bias dependent parasitic source/drain) 154.3 423 P
(resistance.) 72 409 T
1 14 Q
(4.2  Pr) 72 375.67 T
(ogramming Restrictions) 111.02 375.67 T
0 12 Q
0.41 (A T) 72 349 P
0.41 (ype-I compliant model follows four major programming restrictions. First, any mem-) 90.57 349 P
0.7 (ory allocated during a given function call must be freed before the function returns. Ide-) 72 335 P
-0.14 (ally) 72 321 P
-0.14 (, there should be no memory allocated in the model code. Creation of storage space for) 89.22 321 P
-0.09 (all objects, especially the models and instances of the MOS device, is left to the simulator) 72 307 P
-0.09 (.) 501 307 P
0.84 (This prevents con\337icts between the model code and the glue code in the simulator) 72 293 P
0.84 (. Sec-) 475.84 293 P
1.29 (ond, \337at data structures must be used in the model code. In most cases, data structures) 72 279 P
1.28 (composed of pointers to other structures are to be avoided since they create dif) 72 265 P
1.28 (\336culties) 466 265 P
2.2 (with construction of a common simulator side model interface. However) 72 251 P
2.2 (, for binning) 439.93 251 P
1.44 (models and in some other circumstances, pointers in the instance data structure can be) 72 237 P
0.1 (handled with some extra ef) 72 223 P
0.1 (fort in the glue code. Third, fatal errors should not occur in the) 202.16 223 P
1.57 (model code, regardless of the input voltage dif) 72 209 P
1.57 (ferences. T) 306.04 209 P
1.57 (o accomplish this, the model) 360.07 209 P
1.8 (should contains checks in the code that ensure valid results from any expression. The) 72 195 P
0.65 (checks should be implemented such that possible \337oating point exceptions cannot occur) 72 181 P
0.65 (,) 501 181 P
0.39 (and they should report problems to the calling simulator so error messages can be passed) 72 167 P
1.19 (to the appropriate error handler) 72 153 P
1.19 (. Fourth, the model code must compile with an ANSI C) 226.07 153 P
(compatible compiler) 72 139 T
(.) 170.33 139 T
72 63 504 720 C
73.58 473 502.42 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
90 450 22.5 18 287.08 639.33 A
289.05 642.64 300.58 639.33 289.05 636.03 289.05 639.33 4 Y
V
273.58 639.33 289.05 639.33 2 L
N
309.58 639.33 390.58 639.33 2 L
N
264.58 639.33 183.58 639.33 2 L
N
370.92 639.33 370.92 612.33 2 L
N
352.92 612.33 388.92 612.33 2 L
N
370.92 612.33 388.92 594.33 2 L
N
370.92 612.33 352.92 594.33 2 L
N
352.92 594.33 388.92 594.33 2 L
N
370.92 594.33 370.92 576.33 2 L
N
183.58 576.33 390.58 576.33 2 L
N
201.58 639.33 201.58 612.33 2 L
N
183.58 612.33 219.58 612.33 2 L
N
201.58 612.33 219.58 594.33 2 L
N
201.58 612.33 183.58 594.33 2 L
N
183.58 594.33 219.58 594.33 2 L
N
201.58 594.33 201.58 576.33 2 L
N
0 12 Q
(source\325) 176.58 649 T
(drain\325) 360.25 649 T
(bulk) 279.25 537.6 T
(gate) 255.25 691.82 T
264.58 666.33 309.58 666.33 2 L
N
286.25 665.67 286.25 683.67 2 L
N
73.58 470.67 493.58 528 R
7 X
V
1 10 Q
0 X
(FIGURE 3. T) 87.33 521.33 T
(opology for T) 144.47 521.33 T
(ype-I MOSFET model. The intrinsic device contains 4 nodes: gate,) 201.51 521.33 T
(sour) 87.33 511.33 T
(ce, bulk, and drain. The sour) 106.04 511.33 T
(ce-bulk and drain-bulk nodes ar) 229.22 511.33 T
(e connected by a r) 366.85 511.33 T
(everse) 443.88 511.33 T
(biased diode. The evaluate r) 87.33 501.33 T
(outine for the intrinsic MOSFET r) 206.88 501.33 T
(eturns curr) 354.2 501.33 T
(ents and charges) 402.62 501.33 T
(associated with the intrinsic device. Another evaluate r) 87.33 491.33 T
(outine handles the sour) 320.46 491.33 T
(ce and drain) 419.46 491.33 T
(diodes.) 87.33 481.33 T
7 X
90 450 13.5 13.5 332.08 605.83 G
0 X
90 450 13.5 13.5 332.08 605.83 A
331.92 638.67 331.92 620.67 2 L
N
331.92 592.67 331.92 576 2 L
N
335.31 607.54 332 596 328.69 607.54 332 607.54 4 Y
V
332 616 332 607.54 2 L
0.5 H
N
7 X
90 450 13.5 13.5 237.42 606.5 G
1 H
0 X
90 450 13.5 13.5 237.42 606.5 A
237.25 639.33 237.25 621.33 2 L
N
237.25 593.33 237.25 576.67 2 L
N
240.64 608.2 237.33 596.67 234.03 608.2 237.33 608.2 4 Y
V
237.33 616.67 237.33 608.2 2 L
0.5 H
N
286.67 576 286.67 562 2 L
1 H
N
343.8 651.31 355.33 648 343.8 644.69 343.8 648 4 Y
V
336 648 343.8 648 2 L
0.5 H
N
221.54 644.03 210 647.33 221.54 650.64 221.54 647.33 4 Y
V
229.33 647.33 221.54 647.33 2 L
N
278.69 559.13 282 570.67 285.31 559.13 282 559.13 4 Y
V
282 548 282 559.13 2 L
N
389.92 640 398.92 649 407.92 631 416.92 649 425.92 631 434.92 649 443.92 631
 452.92 640 470.92 640 9 L
1 H
N
182.92 640.67 173.92 649.67 164.92 631.67 155.92 649.67 146.92 631.67 137.92 649.67 128.92 631.67
 119.92 640.67 101.92 640.67 9 L
N
90 450 4.83 5.83 475.08 638.83 A
90 450 4.83 5.83 96.42 640.83 A
0 12 Q
(drain) 466.67 650 T
(source) 82.67 651.33 T
295.31 684.2 292 672.67 288.69 684.2 292 684.2 4 Y
V
292 695.33 292 684.2 2 L
0.5 H
N
(rs) 152.67 624.67 T
(rd) 413.33 622 T
72 63 504 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "8" 15
%%Page: "7" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(7) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
0 12 Q
0.26 (the simulator) 108 712 P
0.26 (, but needed by the model, into the model code. SIMenv is a simple \337at data) 170.78 712 P
0.22 (structure which contains information such as the circuit temperature, tnom, default MOS-) 108 698 P
0.82 (FET lengths and widths and any other information needed by the model. The remaining) 108 684 P
0.54 (data structures, MOSmodel and MOSinst, contain information associated with the model) 108 670 P
(and instance, such as the model parameters and element card data.) 108 656 T
1.5 (The model communicates with the simulator through the interface functions, MOSinit-) 108 630 P
2.11 (Model, MOSinitInst, MOSdiodeEvaluate, and MOSevaluate. MOSinitModel initializes) 108 616 P
0.88 (the device model at a speci\336c temperature. The routine performs all parameter tests and) 108 602 P
1.34 (model parameter defaults. MOSinitInst initializes a speci\336c instance of the model. It is) 108 588 P
0.68 (responsible for parameter checks and initialization of default values. MOSdiodeEvaluate) 108 574 P
3.15 (returns the currents, char) 108 560 P
3.15 (ges, transcapacitances, and transconductances for the diode) 236.52 560 P
1.71 (model. MOSevaluate returns the currents, char) 108 546 P
1.71 (ges, transcapacitances, and transconduc-) 340.61 546 P
(tances for the MOS model.) 108 532 T
0.71 (Finally) 108 506 P
0.71 (, errors from the model code are written to an error buf) 141.23 506 P
0.71 (fer and passed back to the) 412.13 506 P
0.86 (simulator) 108 492 P
0.86 (. On the model side, SIMwriteError is used to send an error message and error) 152.68 492 P
0.15 (code to a buf) 108 478 P
0.15 (fer while on the simulator side, the interface function SIMgetError is used to) 170.56 478 P
(return the error buf) 108 464 T
(fer and error code, so the simulator can print out the message.) 199.42 464 T
1 16 Q
(4.0  Design Requir) 108 423.33 T
(ements for a T) 233.94 423.33 T
(ype-I Compliant MOS Model) 331.84 423.33 T
0 12 Q
0.24 (In order for a MOSFET model to be T) 108 396 P
0.24 (ype-I compliant, it must meet the criteria described) 293.04 396 P
0.19 (in this section. First, the topology supported by the interface and the limitations on model) 108 382 P
0.78 (features are described. General programming issues are then addressed. Next, simulator/) 108 368 P
0.42 (model interface issues are discussed, so the separation between the responsibilities of the) 108 354 P
1.01 (model developer versus the simulator developer is clear) 108 340 P
1.01 (. Finally) 382.05 340 P
1.01 (, common aspects of all) 422.29 340 P
(MOSFET T) 108 326 T
(ype-I interfaces and function and data structure prototypes are presented.) 164.83 326 T
1 14 Q
(4.1  Model T) 108 292.67 T
(opology and Featur) 182.16 292.67 T
(es) 298.58 292.67 T
0 12 Q
0.92 (The topology of the T) 108 265.82 P
0.92 (ype-I model is shown in Figure) 216.16 265.82 P
0.92 (3. The intrinsic device consists of) 374.08 265.82 P
0.84 (four terminals: a source, drain, bulk, and gate. T) 108 251.82 P
0.84 (ypically) 345.14 251.82 P
0.84 (, the source-bulk and drain-bulk) 383.02 251.82 P
0.37 (nodes are connected by a reverse biased diode. The model for the intrinsic device returns) 108 237.82 P
-0.08 (currents and char) 108 223.82 P
-0.08 (ges for all of the nodes. A separate model for the source and drain diodes) 190.25 223.82 P
(returns the currents and char) 108 209.82 T
(ges associated with them.) 244.4 209.82 T
FMENDPAGE
%%EndPage: "7" 16
%%Page: "6" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(6) 500 42.5 T
72 63 504 720 C
73 67 503 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
266.69 602.61 351.96 627.81 R
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
0 12 Q
(MOSinitModel) 274.45 610.41 T
267.36 558.35 342.16 583.55 R
7 X
V
0 X
N
(MOSinitInst) 274.16 566.15 T
268.56 522.25 382.52 547.45 R
7 X
V
0 X
N
(MOSdiodeEvaluate) 275.56 530.03 T
268.56 484.45 350.46 509.65 R
7 X
V
0 X
N
(MOSevaluate) 272.33 493.15 T
268.56 450 379 475.85 R
7 X
V
0 X
N
(MOSnoiseEvaluate) 274.33 459.82 T
1 F
(Simulator) 257.27 695.38 T
(-Independent Model) 308.16 695.38 T
195.66 695.88 195.66 384 2 L
V
1 H
8 X
N
0 F
0 X
(MOStemp) 79.96 584.3 T
132 588.67 266.67 615.33 2 L
N
132 590 267.33 572.67 2 L
N
(MOSload) 77.29 515.43 T
126 517.33 268.67 535.33 2 L
N
126.67 517.33 267.33 495.33 2 L
N
(Noise Calculation) 77.29 457.05 T
170 462 267.33 462 2 L
N
78.4 685.89 139.33 685.89 2 L
N
251.89 691.31 418.25 691.31 2 L
N
1 F
(Simulator) 81.73 704.14 T
77.33 166.33 493.33 302.67 R
7 X
V
2 10 Q
0 X
(Description of Simulator Functions:) 82.67 296 T
3 F
(MOStemp) 126.67 284 T
2 F
( - Update the temperature dependencies in the model.) 173.34 284 T
3 F
(MOSload) 126.67 272 T
2 F
( - Matrix load and convergence criteria.) 170.01 272 T
(Description of T) 82.67 248 T
(ype-I Functions:) 152.14 248 T
3 F
(MOSinitModel) 126.67 236 T
2 F
(- Initialize model at the given temperature.) 196.12 236 T
3 F
(MOSinitInst) 126.67 224 T
2 F
( - Initialize instance at the given temperature.) 182.23 224 T
3 F
(MOSdiodeEvaluate) 126.67 212 T
2 F
( - Evaluate junction capacitances, currents, and derivatives) 217.25 212 T
3 F
(MOSevaluate) 126.67 200 T
2 F
( - Calculate MOSFET charges, currents, and derivatives) 189.47 200 T
3 F
-0.18 (MOSnoiseEvaluate) 126.67 188 P
2 F
-0.18 ( - Calculate noise sources for channel charge and \337icker noise.) 216.7 188 P
3 F
(SIMgetError) 126.67 176 T
2 F
( - Get error messages and codes from buf) 183.9 176 T
(fer) 369.35 176 T
78 126 496 158.33 R
7 X
V
1 F
0 X
(FIGURE 2. Design of the T) 91.75 151.67 T
(ype-I Interface. This diagram shows the interaction between the) 207.11 151.67 T
(simulator glue code and the T) 91.75 141.67 T
(ype-I interface.) 217.95 141.67 T
J
J
166.33 664.67 223.33 687.67 R
N
0 12 Q
(SIMenv) 176.33 673.67 T
(Interface between T) 80 358.67 T
(ype-I Model) 175.11 358.67 T
(and simulator glue code) 80 346.67 T
183.33 382.45 195.33 382.34 185.1 376.07 184.21 379.26 4 Y
V
146 368.67 184.22 379.25 2 L
N
77.33 333 496 333 2 L
N
394.67 384.67 468.67 420 R
0.5 H
N
(Error Buf) 400.67 406.67 T
(fer) 446.77 406.67 T
(Error Codes) 400.67 394.67 T
(SIMgetError) 258 402 T
323.33 404.67 395.33 404.67 2 L
1 H
N
162.67 637.83 228.67 661.17 R
N
(MOSmodel) 167.7 647.83 T
164.67 611.83 226 635.17 R
N
(MOSinst) 170.67 621.83 T
(Data) 179.33 705.33 T
(Structures) 165.33 694 T
255.33 395.33 322 415.33 R
0.5 H
N
254.67 405.33 153.33 405.33 2 L
1 H
N
(Error Handler) 80.63 402.67 T
1 F
(Glue Code) 81.73 692.14 T
0 F
(SIMwriteError) 413.33 460.67 T
407.33 449.33 490 475.33 R
0.5 H
N
396.46 465.97 408 462.67 396.46 459.36 396.46 462.67 4 Y
V
380 462.67 396.46 462.67 2 L
N
440.64 432.2 437.33 420.67 434.03 432.2 437.33 432.2 4 Y
V
437.33 448.67 437.33 432.2 2 L
N
424.64 487.54 421.33 476 418.03 487.54 421.33 487.54 4 Y
V
350.67 497.33 421.33 497.33 421.33 487.54 3 L
N
441.97 486.87 438.67 475.33 435.36 486.87 438.67 486.87 4 Y
V
382.67 535.33 438.67 535.33 438.67 486.87 3 L
N
459.97 486.87 456.67 475.33 453.36 486.87 456.67 486.87 4 Y
V
342 572 456.67 572 456.67 486.87 3 L
N
477.31 487.54 474 476 470.69 487.54 474 487.54 4 Y
V
352 616 474 616 474 487.54 3 L
N
72 63 504 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "6" 17
%%Page: "5" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(5) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
0 12 Q
1.16 (source code. For instance, a model in the T) 108 712 P
1.16 (ype-I standard contains parameter checking,) 323.08 712 P
0.98 (temperature updating, evaluation of currents and derivatives, and error handling. Every-) 108 698 P
-0.21 (thing else, such as keeping track of lists of models and instances, circuit node connections,) 108 684 P
1.84 (state vectors, matrix loading, conver) 108 670 P
1.84 (gence checks, etc. is assumed to exist in the glue) 289.79 670 P
2.17 (code. This partitioning of the model from the glue code was quite successful for the) 108 656 P
0.01 (Motorola Model Library) 108 642 P
0.01 (. In fact, the original interface allowed us to install an object code) 225.23 642 P
-0.23 (version of the Motorola MOSFET model in a number of simulators without excessive pro-) 108 628 P
(gramming ef) 108 614 T
(fort.) 169.44 614 T
-0.09 (A more detailed view of the interface between the MOSFET model and the simulator glue) 108 159 P
0.64 (code is shown in Figure) 108 144.82 P
0.64 (2. The T) 228.21 144.82 P
0.64 (ype-I interface consists of four main parts: the environ-) 269.63 144.82 P
-0.25 (ment data structure, the model and instance data structures, the model source code, and the) 108 130.82 P
1.04 (error handling routines. The model, instance, and environment data structures provide a) 108 116.82 P
0.12 (bridge between the simulator and the model. Both the simulator and the model can access) 108 102.82 P
0.48 (these data structures so they provide an easy way to pass information between the model) 108 88.82 P
0.41 (code and the simulator) 108 74.82 P
0.41 (. The SIMenv data structure is used to pass information speci\336c to) 217.55 74.82 P
108 63 540 720 C
110.25 181 537.75 610 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
433.58 389.33 518.92 441.33 18 RR
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
0 12 Q
(MOSFET) 453.58 417.15 T
(Model) 461.58 404.67 T
7 X
90 450 29.33 28.67 354.25 540 G
0 X
90 450 29.33 28.67 354.25 540 A
7 X
90 450 29.33 28.67 354.25 478 G
0 X
90 450 29.33 28.67 354.25 478 A
7 X
90 450 29.33 28.67 353.58 417.33 G
0 X
90 450 29.33 28.67 353.58 417.33 A
7 X
90 450 29.33 28.67 354.25 352.67 G
0 X
90 450 29.33 28.67 354.25 352.67 A
7 X
90 450 29.33 28.67 354.25 288 G
0 X
90 450 29.33 28.67 354.25 288 A
163.58 529.33 220.92 561.33 R
7 X
V
0 X
N
(Hspice) 170.92 542 T
163.58 466 220.92 498 R
7 X
V
0 X
N
(MNS) 170.92 478.67 T
163.58 400.67 220.92 432.67 R
7 X
V
0 X
N
(Pspice) 170.92 413.33 T
163.58 334.67 220.92 366.67 R
7 X
V
0 X
N
(Saber) 170.92 347.33 T
163.58 270.67 220.92 302.67 R
7 X
V
0 X
N
(Spectre) 170.92 283.33 T
220.92 544.67 324.25 544.67 2 L
N
220.25 482 323.58 482 2 L
N
221.58 414.67 324.92 414.67 2 L
N
221.58 349.33 324.92 349.33 2 L
N
220.92 286.67 324.25 286.67 2 L
N
384.25 541.33 448 440 2 L
N
382.92 474.67 432.92 426.67 2 L
N
384.25 416.67 434.25 416.67 2 L
N
384.25 351.33 434.92 400 2 L
N
383.58 287.33 448.92 389.33 2 L
N
(Simulator) 168.92 580 T
(Glue Code) 331.58 579.33 T
115.58 187 535.58 232 R
7 X
V
1 10 Q
0 X
(FIGURE 1. Diagram ot he T) 129.33 225.33 T
(ype-I Standard Interface to MOS Models. Each of theses) 250.25 225.33 T
(pr) 129.33 215.33 T
(oprietary simulators pr) 139.15 215.33 T
(ovides glue code for interfacing to user) 238.96 215.33 T
(-de\336ned models. By) 403.57 215.33 T
(con\336guring the code model pr) 129.33 205.33 T
(operly) 256.93 205.33 T
(, glue code fr) 283.6 205.33 T
(om each of the simulators shown her) 338.41 205.33 T
(e can) 494.33 205.33 T
(access the MOS Model.) 129.33 195.33 T
J
402.25 544.67 402.25 288.67 2 L
J
402.25 544.67 402.25 541.17 2 L
1 H
N
[7.114 7.114] 7.114 I
402.25 541.17 402.25 292.17 2 L
N
J
402.25 292.17 402.25 288.67 2 L
N
(Interface to Model Code) 388.92 279.33 T
J
0 12 Q
(Hspice) 339.75 543.6 T
(Glue) 339.75 531.6 T
(MNS) 339.75 480.6 T
(Glue) 339.75 468.6 T
(Pspice) 339.75 421 T
(Glue) 339.75 409 T
(Saber) 339.75 358 T
(Glue) 339.75 346 T
(Spectre) 339.75 295 T
(Glue) 339.75 283 T
(Language) 111.58 580.6 T
(Fortran) 111.67 542 T
(C) 125.33 480 T
(C) 125.33 413.33 T
(Ratfor) 114 348.67 T
(C) 125.33 284.67 T
108 63 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "5" 18
%%Page: "4" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(4) 500 42.5 T
1 16 Q
(1.0  Intr) 72 709.33 T
(oduction) 127.26 709.33 T
0 12 Q
0.36 (This document describes a \322T) 72 682 P
0.36 (ype-I\323 model interface standard developed for the SEMA) 215.9 682 P
0.36 (T-) 492.67 682 P
0.23 (ECH Compact Model W) 72 668 P
0.23 (orkshop. The purpose behind this standard is to allow the critical) 190.72 668 P
0.75 (elements of a MOSFET model to be captured in a single copy of the source code which) 72 654 P
0.07 (can then be distributed as source or object code and easily installed on any simulator plat-) 72 640 P
2.49 (form. The general philosophy behind this standard interface has been proven though) 72 626 P
0.21 (Motorola\325) 72 612 P
0.21 (s use of a preliminary version of the T) 120 612 P
0.21 (ype-I model interface to install its propri-) 304.12 612 P
(etary MOSFET model in a number of simulators: MNS, Hspice, Saber) 72 598 T
(, and Pspice.) 410.16 598 T
1.02 (Because the T) 72 572 P
1.02 (ype-I standard interface is restricted to a 4-terminal MOSFET with a pre-) 141.18 572 P
0.43 (de\336ned matrix stamp, there are a number of physical ef) 72 558 P
0.43 (fects which cannot be included in) 340.9 558 P
-0.28 (the model. For instance, the source/drain resistance must be bias independent and there are) 72 544 P
0.21 (currently no provisions for self-heating or non-quasi static ef) 72 530 P
0.21 (fects. Although this standard) 365.39 530 P
-0.04 (describes a MOSFET model, a similar interface could be developed for other device mod-) 72 516 P
-0.13 (els, such as bipolar transistors. In the future, the interface may be extended to include self-) 72 502 P
(heating and NQS ef) 72 488 T
(fects.) 166.76 488 T
-0.11 (This document provides an overview of the T) 72 462 P
-0.11 (ype-I standard and de\336nes all components of) 289.36 462 P
0.31 (a MOSFET model that qualify it as T) 72 448 P
0.31 (ype-I compliant. T) 252.96 448 P
0.31 (o provide an example of a T) 342.39 448 P
0.31 (ype-I) 478.68 448 P
0.94 (compliant model, the BSIM3 model has been recast as T) 72 434 P
0.94 (ype-I compliant and the source) 351.6 434 P
(code is available on the Sematech ftp site.) 72 420 T
1 16 Q
(2.0  Requir) 72 379.33 T
(ements for the T) 147.71 379.33 T
(ype-I Model Standard) 258.94 379.33 T
0 12 Q
0.63 (The requirements for the T) 72 352 P
0.63 (ype-I Model Standard have evolved from the Sematech Com-) 202.99 352 P
1.94 (pact Modeling W) 72 338 P
1.94 (orkshop and the Motorola Model Library) 158.91 338 P
1.94 (. Fundamentally) 365.48 338 P
1.94 (, the T) 444.64 338 P
1.94 (ype-I) 478.68 338 P
1 (Standard requires that a 4-terminal MOS model with a pre-de\336ned matrix stamp can be) 72 324 P
0.31 (installed into any SPICE-like circuit simulator as either object or source code. Since both) 72 310 P
-0.19 (source and object code installation is supported, the installation procedure must be accom-) 72 296 P
1.18 (plished without requiring changes to the source code of the model. Dynamic linking of) 72 282 P
(object code into the simulator can be provided at the discretion of the simulator owner) 72 268 T
(.) 485.28 268 T
1 16 Q
(3.0  Overview of the T) 72 227.33 T
(ype-I Standard Interface to Simulators) 221.9 227.33 T
0 12 Q
2.42 (Figure) 72 199.82 P
2.42 (1 illustrates our view of the natural split between simulator speci\336c code and) 106.33 199.82 P
1.01 (model speci\336c code. On the left of the \336gure there are a number of simulators. Each of) 72 185.82 P
0.93 (these simulators has implemented a unique way to interface to new models. This model) 72 171.82 P
-0.09 (interface code is referred to as glue code. The glue code takes care of all the book-keeping) 72 157.82 P
0.34 (associated with a device model. At the far right is the code for a MOSFET model. In this) 72 143.82 P
0.36 (\336gure, it is shown as a common block, which signi\336es that it is identical code, regardless) 72 129.82 P
(of the simulator) 72 115.82 T
(.) 147.34 115.82 T
0.22 (Since the interface for the T) 72 89.82 P
0.22 (ype-I standard is placed between the glue code and the model) 206.55 89.82 P
1.95 (code, only the most fundamental components of the model are included in the model) 72 75.82 P
FMENDPAGE
%%EndPage: "4" 19
%%Page: "3" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(3) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
1 18 Q
(T) 256.33 708 T
(able of Contents) 266.68 708 T
0 12 Q
(1.0) 108 641 T
(Introduction) 144 641 T
(..............................................................................................................) 204 641 T
(3) 534 641 T
(2.0) 108 621 T
(Requirements for the T) 144 621 T
(ype-I Model Standard) 254.81 621 T
(.........................................................) 363 621 T
(3) 534 621 T
(3.0) 108 601 T
(Overview of the T) 144 601 T
(ype-I Standard Interface to Simulators) 231.47 601 T
(.......................................) 417 601 T
(3) 534 601 T
(4.0) 108 581 T
(Design Requirements for a T) 144 581 T
(ype-I Compliant MOS Model) 282.47 581 T
(....................................) 426 581 T
(5) 534 581 T
0 10 Q
(4.1) 144 566.33 T
(Model T) 180 566.33 T
(opology and Features) 214.02 566.33 T
(.............................................................................................) 302.5 566.33 T
(5) 535 566.33 T
(4.2) 144 552.33 T
(Programming Restrictions) 180 552.33 T
(...................................................................................................) 287.5 552.33 T
(7) 535 552.33 T
(4.3) 144 538.33 T
(Simulator Interactions) 180 538.33 T
(..........................................................................................................) 270 538.33 T
(7) 535 538.33 T
(4.4) 144 524.33 T
(Common Header Files and Data Structures) 180 524.33 T
(.........................................................................) 352.5 524.33 T
(8) 535 524.33 T
(4.5) 144 510.33 T
(T) 180 510.33 T
(emplates for Model Source Code) 185.41 510.33 T
(....................................................................................) 320 510.33 T
(1) 530.37 510.33 T
(1) 535 510.33 T
(4.5.1) 180 498.33 T
(Model and Instance Data Structures) 216 498.33 T
(....................................................................) 360 498.33 T
(1) 530.37 498.33 T
(1) 535 498.33 T
(4.5.2) 180 486.33 T
(MOS Model and Instance Initialization) 216 486.33 T
(..............................................................) 375 486.33 T
(13) 530 486.33 T
(4.5.3) 180 474.33 T
(MOSFET Evaluation) 216 474.33 T
(...........................................................................................) 302.5 474.33 T
(14) 530 474.33 T
(4.5.4) 180 462.33 T
(MOS Noise Calculation) 216 462.33 T
(.......................................................................................) 312.5 462.33 T
(17) 530 462.33 T
(4.6) 144 448.33 T
(Documentation) 180 448.33 T
(...................................................................................................................) 242.5 448.33 T
(18) 530 448.33 T
(4.7) 144 434.33 T
(T) 180 434.33 T
(esting) 185.41 434.33 T
(................................................................................................................................) 210 434.33 T
(18) 530 434.33 T
0 12 Q
(5.0) 108 415 T
(Generic Use of the T) 144 415 T
(ype-I Interface in a Simulator) 243.79 415 T
(...............................................) 387 415 T
(19) 528 415 T
(6.0) 108 395 T
(T) 144 395 T
(ransforming BSIM3 into a T) 150.91 395 T
(ype-I Compliant MOS Model) 287.4 395 T
(................................) 432 395 T
(21) 528 395 T
FMENDPAGE
%%EndPage: "3" 20
%%Page: "2" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Simulator Independent MOSFET Model T) 72 750.54 T
(ype-I Standard) 207.88 750.54 T
504 54 72 54 2 L
0.25 H
2 Z
N
1 F
(MOT) 72 42.5 T
(OROLA APRDL/CMG) 90.97 42.5 T
0 F
(December 8, 1995) 330.56 42.5 T
1 F
(2) 500 42.5 T
4 16 Q
(Revision History) 233.1 709.33 T
1 12 Q
(Date) 72 682 T
(Release #) 144.67 682 T
(Developer) 216 682 T
(Changes Made) 324 682 T
0 F
(13-MA) 72 656 T
(Y) 106.22 656 T
(-95) 113.56 656 T
(0.1) 144.67 656 T
(David Newmark) 216 656 T
(Initial Draft) 324 656 T
(1) 72 630 T
(1-NOV) 77.56 630 T
(-95) 112.44 630 T
(0.2) 144.67 630 T
(David Newmark) 216 630 T
-0.17 (Revisions based on suggestions made) 324 630 P
4.36 (at the August 1) 324 616 P
4.36 (1, 1995 Sematech) 409.63 616 P
10.56 (Compact Modeling Meeting in) 324 602 P
(Sunnyvale, California) 324 588 T
FMENDPAGE
%%EndPage: "2" 21
%%Page: "1" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 54 540 54 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(1) 108 42.5 T
(December 8, 1995) 276.56 42.5 T
1 F
(MOT) 440.37 42.5 T
(OROLA APRDL/CMG) 459.34 42.5 T
0 130.91 255.28 655.34 411.9 65.55 19.58 474.45 736.42 FMBEGINEPSF
%%BeginDocument: /home/fixx/surya/frame/Logos/APRDLbw.eps
%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand 3.1%%Title: APRDL 9.3%%CreationDate: 1/26/94 11:34 AM%%BoundingBox: 130.9103 255.282 655.3448 411.9032%%DocumentProcSets: FreeHand_header 3 1%%DocumentSuppliedProcSets: FreeHand_header 3 1%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0 0.91 0.87 0  (PANTONE Red 032 CV)%%+ 1 0 0 0  (100c)%%+ 0 0.51 0.87 0  (PANTONE Orange 021 CV)%%FHPathName: David HD:APRDL:APRDL 9.3%%EndComments%%BeginProcSet: FreeHand_header 3 0/FHIODict 30 dict defFHIODict begin/bdf{bind def}bind def/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/u{}bdf/U{}bdf/sepdef{dup where not{FreeHandSepDict}if3 1 roll exch put}bdf/`{false setoverprintend %. FreeHandDict/-save0- save defpop pop pop pop popconcatuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if} bdf/~{end-save0- restoreFreeHandDict begin}bdf/FreeHandDict 191 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def/dr{transform .25 sub round .25 addexch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/printerResgsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/maxsteps 256 def/calcgraysteps {currentscreen pop exch printerRes exch div exch2 copysin mul round dup mul3 1 rollcos mul round dup muladd 1 adddup maxsteps gt {pop maxsteps} if} bdf/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/xt -0 def/yt -0 def/df currentflat def/tempstr 1 string def/clipflatness currentflat def/inverted?0 currenttransfer exec .5 ge def/level2 /languagelevel where {pop languagelevel 1 ne}{false}ifelse def/colorexistslevel2{statusdict/processcolors known{statusdict/processcolors get exec}{1}ifelse4 eq def}{systemdict/setcmykcolor known def}ifelse/tc1 [0 0 0 1] def/tc2 [0 0 0 1] def/fc [0 0 0 1] def/sc [0 0 0 1] def/concatprocs{/packedarray where{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{/proc2 exch cvlit def/proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom m left top Lright top L right bottom L closepath}bdf/i{dup 0 eq{pop df dup}{dup} ifelse/clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{{/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}looppop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf/W{/clipper load 100 clipflatness fps}bdfend%. FreeHandDictend%. FHIODict%%EndProcSet%%EndProlog%%BeginSetupFHIODict beginFreeHandDict begin130.9103 255.282 655.3448 411.9032 storerect rectpath clip newpath/onlyk{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse/customcolorimage{colorexists{aload pop pop 4 array astoresetimagecmykcurrentcolortransfer{ik mul ik sub 1 add}concatprocs 4 1 roll{iy mul iy sub 1 add}concatprocs 4 1 roll{im mul im sub 1 add}concatprocs 4 1 roll{ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer/magentabuf 0 string def/yellowbuf 0 string def/blackbuf 0 string def{invbuf dup length magentabuf length ne{dup length dup dup/magentabuf exch string def/yellowbuf exch string def/blackbuf exch string def}ifdup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage}{pop image}ifelse}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/getcmyk {dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse}bdf/setimagecmyk{getcmyk/ik xdf /iy xdf /im xdf /ic xdf}ndf/autospread{pop}ndf/fhsetspreadsize{pop}ndf/fhsetspreadallow{pop}ndf/strokeopf false def/fillopf false def/R{0 ne /strokeopf xdf}bdf/O{0 ne /fillopf xdf}bdf/filler{fill}bdf/F{fc fhsetcolor fillopf setoverprint false autospreadgsave /filler load fp grestore false setoverprint}bdf/f{closepath F}bdf/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/s{closepath S}bdf/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestoresc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf/b{closepath B}bdf/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse/fhsetcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/settextcolor{dup fhsetcolortextblackopf{dup length 4 eq{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}{pop}ifelse}{pop}ifelse}ndf/ka{/fc xdf}bdf/Ka{/sc xdf}bdf/xa{/fc xdf} bdf/Xa{/sc xdf} bdf/bc2[0 0]def/bc4[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{ {calcgraysteps}{maxsteps}ifelsetc1 length 4 eq{0 1 3{tc1 1 index gettc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 tc1 1 get 1 exch puttc1 gettint tc2 gettintsub abs}ifelsemul abs round dup 0 eq{pop 1}if dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{tc1 length 4 eq{0 1 3{bc4 exchtc1 1 index gettc2 2 index get1 index subfrac mul add put}for bc4}{bc2tc1 gettinttc2 gettint1 index subfrac mul addputtint bc2}ifelsefhsetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdfFHIODict begin/origmtx matrix currentmatrix def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cmykbufs2gray{dup length 0 1 3 -1 roll 1 sub{4 index 1 index get4 index 2 index get4 index 3 index get4 index 4 index get255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift2 index 3 1 roll put}for4 1 roll pop pop pop}bdfend/currentpacking where{pop false setpacking}if/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 0  (White) falsenewcmykcustomcolor]def%%EndSetup[] 0 d3.863708 M1 w0 j0 J0 O0 R0 ifalse eomode[0 0 0 1] Ka[0 0 0 1] kavmsuutrue fhsetspreadallow441.3654 330.6905 m441.3221 330.7621 Ln411.1734 298.9889 m411.1301 299.0605 Ln161.4797 285.8515 m130.9103 255.282 L172.4243 381.3338 L202.9938 411.9032 L161.4797 285.8515 Lfn187.8978 323.9689 m178.0853 292.2673 L204.3147 292.2673 L216.2028 255.282 L246.7722 285.8515 L234.5067 323.9689 L187.8978 323.9689 Lfn262.8117 286.0402 m249.9801 273.2086 L249.9801 255.282 L280.5495 285.8515 L280.1721 411.9032 L249.9801 381.5225 L249.9801 324.7237 L262.8117 286.0402 Lfntrue eomode295.2682 398.6942 m319.4218 398.6942 L336.6634 398.6942 350.6461 384.8375 350.6461 367.5959 C350.6461 350.608 337.2549 337.0168 320.369 336.6207 C320.0299 351.4705 309.3931 363.682 295.2682 366.4265 C295.2682 398.6942 L295.2682 398.6942 Lfnfalse eomode346.2172 255.6595 m346.2172 329.8186 L322.6297 306.6085 L315.4962 299.5008 305.9187 295.0539 295.2682 294.1543 C295.2682 323.9689 L321.6862 323.9689 L346.0053 323.9689 365.7152 343.5756 365.7152 367.8947 C365.7152 377.3172 362.768 386.0608 357.7279 393.2219 C376.4092 411.9032 L376.4092 285.8515 L346.2172 255.6595 Lfntrue eomode490.3758 398.6942 m506.3209 398.6942 L533.8865 398.6942 556.2321 376.3485 556.2321 348.783 C556.2321 327.3282 542.4774 309.276 523.4028 302.2708 C525.112 307.2705 526.0401 312.6311 526.0401 318.2135 C526.0401 340.8242 510.9934 359.9137 490.3758 366.0491 C490.3758 398.6942 L490.3758 398.6942 Lfn474.9107 411.9032 m454.9085 391.901 L459.4292 384.985 461.9523 376.7739 461.9523 367.8947 C461.9523 353.7026 455.1425 341.0487 444.7187 333.0265 C444.7187 323.4028 L461.8904 285.8515 L444.7103 268.6798 L444.7103 255.282 L478.496 255.282 L495.5094 255.282 511.7978 261.9331 523.218 272.8312 C551.9371 301.5136 L551.9371 255.282 L625.1161 255.282 L655.3448 285.8515 L582.1291 285.8515 L582.1291 411.9032 L558.1275 387.9383 L566.64 377.1809 571.7056 363.5665 571.7056 348.783 C571.7056 313.9222 543.1631 285.8515 508.3023 285.8515 C474.9024 285.8515 L474.9024 411.9032 L474.9107 411.9032 Lfnfalse eomode415.6589 398.6942 m432.9005 398.6942 446.8832 384.8375 446.8832 367.5959 C446.8832 350.608 433.5687 337.0177 416.6829 336.6215 C416.3432 351.4709 405.6299 363.4934 391.5053 366.2378 C391.5053 398.6942 L415.6589 398.6942 Lfn446.2283 285.8515 m428.1418 325.1545 L424.8625 324.3792 421.4411 323.9689 417.9233 323.9689 C391.5053 323.9689 L391.5053 292.456 L393.6967 292.642 395.8617 292.9592 397.9497 293.4529 C415.4702 255.282 L446.2283 285.8515 Lfn191.6718 336.6118 m230.9214 336.6118 L211.1079 398.5055 L191.6718 336.6118 LfnUUvmr%%Trailerend  % FreeHandDictend  % FHIODict
%%EndDocument
FMENDEPSF
1 24 Q
(Simulator Independent MOSFET Model) 115.64 650 T
(T) 239.21 620 T
(ype-I Standard) 253.44 620 T
0 12 Q
(This document prepared by:) 256.51 496 T
1 F
(Characterization and Modeling Gr) 224.94 482 T
(oup) 403.72 482 T
(Advanced Pr) 201.89 468 T
(oducts Resear) 268.67 468 T
(ch Development Lab) 340.11 468 T
0 F
(Please address comments to:) 255.17 314 T
1 F
(David M. Newmark) 273.17 286 T
(\050512\051 933-6099, Fax: \050512\051 933-5262) 232.85 272 T
(david@fripp.sps.mot.com) 257.92 258 T
108 675 540 729 R
7 X
V
108 675 540 729 C
111.19 675 536.8 717 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  8897     
1477 285 212.35 40.97 0 119.53 675.67 BEGINBITMAPBWc
G#
E03FF%
C000003FE#8#
C000001FD#:#
00000007C"="
F800C">"
C03FB#>"
FE0007B":#9#
E07FE0007FB"9%9"
007FFFFFF00FA"9#8#8"
FCFFFFFFF001A"8";&
C07FFFF000001F@&<"8"
FC000001FFFC03@"8"=%
F83FFFC00000@%>"8"
E00001FFF83F@$?"8"
80000FFF1F?%@$
FE00007FE00007?%@$
FC0003FFFC0001?$A%
F0001FFF80007F?$B$
C000FFF8001F?#C$
0003FC0007>$C$
FC0007FF0001>$D#
F0001FC000>$D$
E0007FE0003F>$D$
8000FFF8000F=$E$
FC0003FE0003=$E$
F8001FFF8001=$F#
F0003FE000=$F$
E000FFF8003F=#G$
C003FC001F=#G$
8007FF000F<$H#
FE001FC003<$9"@"9#
FC007FEF3FF001<$H#
F800FFF800<#:"D$
F001C7FC007F<#I$
C003FE003F<#D#9$
800FFE1FFF001F<#:"E#
001FC3800F;$:"E#
FE003F83E003;$D#:#
FC007FFC0FF001;$:"E#
F800FF81F800;#;"E$
F00101FC007F;#E#:$
C007F807FE003F;#J$
800F5FF800F;#;"F"
001F00C0:$:"G#
FE003FFEE007<"E#;#
FFF003F003:#="E#
FC017FF801:#;"G#
F803FCFE00:#F#="
F007E0017F:#="E$
E00F3FFF003F:"<"H"
C0F880;"F#<#
1FC000C01F:#J#
803F8E00F:#="G"
007F1F079$;"H#
FE00FFF0F0039"H$;"
FC80007FF8:">"F#
010FFC019#<"H#
F803E0FE009#G$="
F00700003F7F9#>"F$
E00F07FF003F9"="I"
C0C080:"F"8"<#
1FFE1FC01F9#J#
803F:E00F9#>"G#
007F03F0078$<"I"
FE00FF80F89"G"8"="
01FC0F038"@"G"
FC01FC9"="I#
0300FE018#G"8"="
F807F807008"@"G"
F000FF9"<"J#
0FFE5807F8"H"
E0F09"J"=#
1F403C03F8"A"
C07F9"<"J#
3FFC5E01F8#G"8"
807FE001D"G#
3FF00F8#<"
00FFF8J"8"=#
5C000F8077#A"
FE011F@"J#
F05FC037#H"A"
FC038001J"<"
97FFE7#A"H"
F8070F00@"J"
E05FF7#H"9">"
F00F003F7F7"B"H"
E007808"="J#
1FC06C03F8"G":"
3FFE1F7"B"H"
C003E08"J"
7F?1F@"?"B"
80FCF07"J"
8070FD"I"J#J#J#
010FKE007?801FAE0078"="J%J%J%
FF00O4E0000001=80000007?E00000017"H":"="Ga":"a";$8$;"i":$8#="f">$8$=&B"`"
00F807F80FFC1FFE000000007FF01FF800000001F83FFE000000007F0000000001FE01D"I"J"<";"<"J";#H">"<"J";"
0007;F83FF80F9E0003F03F80F8FC007"="J"B"<"J"<"H#="<"A"
01FEO&F0E00198007001FE00103"I":"="F"<"F#<#:"D"9#<#H"<#<#;"G"
FEF003FCFE07FE00001FE03FF800007F07FE00001FFEF8E"H"J"A">"J">";"B"<">"J"
7F03;E0F0077C01FF003F0077F07"J"<":">"J">"H"<">"J"
03O.C07FC0017000700C001>7F?"@"B"F"A"@#>#9"D"8"?"I":#>#?"B"
FCE0FEFC80FE00007FC07FF8037FFE00007F07E0"J"J":"@"@"J"?#H":"@":"G"
FC801?0300F81F5E0007F3FF81FFCC07"C"H"J"@"J"@":"C":"@"
073F01FE0075801FE00FE007?"J"="9"@"J#@"H":"@"J"<"
F8O%FEFF80014FE000F0780016803F"I":"="F"@"A"@"9"D$A"H":"@"
F8C000FFF8FC000080FFFFFC03030000E"H"J"@"B"I"A"J"B">"B"
1F00:F8FC7FF0016FC7F0F007"="J"9"<"9"B"I"A":"C"9"B"9"F"
0FF0O!01F001F83FE000C001F81FF8FE"I";"="J"B"I"B"G"9"B"
F0807F80EE00F803F00E00FE"I"D"@"@"B"8"C%B"J"B"J"="
0F7FF0E080030001FFFE000F580034FC1F7"J"@"J"J"B">"A"
1FO-C000?FCC00011FF8">"@"C"J"9"<"8"C"H"C"9"D$G"
E0E000C06008003FC01F007807FFFFCF0J"J"@"?"C#G"C"J"C#I"
:3F7E000F8007FE0034F8007FF07"C"I"J"E"D$C"J"J"="
3F073FCF0FE03FF80014F0BE00F?"J"J"@"D"G"C"J"D"
C08E09FEE03F00004E03F"H"<"J$="8"D"F"E"8"F"D"8":"A"
C0FE1F?7FFFFC07C01FFE7F00C01FE03FC0E"J"?"@"D#E"E"I"D"
03BC0F8800FFCFC3F800F?"J"?#D"E#E"I"D"I"
80O$F0FE000707F81F0007807"G"J$E"F"E"H"E"I"="
7FFCO"0FFFFC03F00FFC030007E"@">"J$?"=#J"<$>"E#=#D"
010F1F63FFFE0F87FF87E001FFE0FE3FF87FF87FJ"?"?"<%;#E"<%;"<'<"<%;"8"E"
O$80C0F00FFFFFE001F8C03FFFFF80070FFFFFFFFFF8F00FFFFFE001C0FE?"?"D"J"F"8"J"="8"G";"="8"J"
00F8F09803FF850FFFE0FE7F3FF88FCJ"J$<"8";"F";"9";"H"<"8";"J"
:07I1FFFE0FFFE008003F803E0FFFE00;03E"J$?";"9#J";"9"=":":"<";"9#J"
00J1FFF00C007FF805001FFCFC1FFFC003FF807F8>"J">"@";":";"D"<"9";"B";";":";$:"@"
FEI00FE800FC0700E3FFF0180800FE07FFF80FFF0"H"<"J"@";":"E'<":"J#;":"
80F003@FC003FF00FFFFFFFFFFCFFC06FF003FF0F"J">"=":";':"@"J":"J"9":"
7FJF83F7FF87FFFFFFFFFE01F01C7FF87E00401>"J">"@"<":";":"?";";"<":"@"<":";"G"9"
FCHFE0FFEFFFC3FF0F807F0F83FFEFFFC3FC00C7"G"J"E"J"@"F"<"G"E"
FFE0GF001@0F000101010EF"?">"J"?";";"J";";"G"9#;";"="E"9"
3F010F7E0FC07FE4F01FF80003FC07FE00801EJ">"B"@":":"J"J"9"
O-C07FFFE03FE0O FF7003E>"@"J"?"?";"J";"<":":":#;"J"
F8C0=FC80F80F@3FFCF07FFE07F80FF00J"="J"@";"J";"J";";"A"F":"
:00F8707F01F:C07F6FCF01F1FFE7FF"J">"<"F":"@"J":"<"A#:"@":"
1FJ00FF3FC07FFF6F80F3F3FFE03FCFF>"J"@"J"J":#
F0O#06E0@80<E01FE0I"="J">"F"J"C"?"A"J"9"<"
807F5F8047F?01E0C07F<F8017F"E"J"F"J"H"9#:"<"J"
000FI00FF?03FFFE003FFF@03J$J":":"J`;#H":"@";"
O501FFC0680FF007FFC0FC07F080"="@"J"J"D"J"9"
01E000=F0OG01805E007F"@"="J"J"C"J"="J"
073F07F01@07C04010090FJ"E"J"J$J"@"
O'0880?FEA07FF80BC03F>"?"J"9">":"<"G"9"@"J"<"J"9$
C0FE>E01802030300010F;1F03=801FFFC0J"<"J"J"J":"D"
;1FFC;06O:7F4F80F3FF"J">"H";"J":$C"C";"F"
03D1C04FE7F:F801FF80FFFE7F00>"J"H">":$:"F":":";"J"8"J"<"
809F83C0C07FF0007FE03FC1F:0300F7F1FA$:"9#9"J"B"J"="J":$
03FF80FC1FFE0F5C01CO90F07<FEFFFFE0A$8";$@"J"H";"J":"D"D"<":"?"
0FFFF801FFFF800F:3CFCFF:F0031FFCF01FFC"="8$="8"J">"J"B"J"I"
00007FFFFF07F0<3E78O,007F4FF01@#8"9"8"8"8"J"C"C"?":"G"H#D"J"9"="
01FF80F81FFC0797E0FF8FC07E001FFF85F8030F@"9$:"8"J"B"J"J"J"F"9%
07E000003FFE880F8701@07B01F000000000"?"9"<"8#J"I"J"H#D"J"
800FF07FFF80C01F0@C0007FF05E0="8"9"9%9"J#:"H"J#C"I$:"
FE1FF8F00001FFC0C03F01F03@0FFE3F03FFE03F@"9"8"8":$J"9"="I"?":"G"I"D"J"A"
3FFE7F03E00003500FF07E0F80F800FE05C007@"9";":"J":"J":"D"D":"
7FFF0FF0O)C007;001F03C007="8":"8$:">"J"B"<"J";"J"="<"J"
FCFFC0E0001FF8F0:0F038090FFE4010380580?"@":$J">#:$A":"?":"A";#C"8"A":$:"?"
013FFC00018011FE03FFF80000F1FFEFC3FFC0080000FFFC07F00?";$8":"?"B";"<"B";"@"E";"J"<";"
03E0003F7FFE1FFE803F01FEF007F857F01FE7";$;"J"H";"J";"J"J"B"
7FF80007F0M7FFC1F:F07F<FC5FE03?";"8$:"J":";"J";";"J$:";";"E"
0FF8C000FFFFKC000F84FF03E053FFFC000F81FFCG$<#J">#:"B";":":"F";"J";$
1FC0018000803FFC07FE03FE03F80FF<E03FFF80">";"9"<"J";";"D":";"J":#:$J":"B">"
C01FFE03C05FCC0017F807F401FE0001FFF867F80FFF8=$>#<"J">";":";"J":";"H";":";"E"B"
F0003F8007E0A03E03F00FF400FC03E03F007FF001E$@"J"<"="9"J";"9"J"9"<"
FF000F7F?07FF0FFE6803FF8>0FFEFF?"<"8"<"J"9"?"B"9";";":"A"9";$:&C"9";"8":b$
7F800FF05F8078003F801C07F0FE007FFF07FFFFFFFC003F801007FFFE0=">%D"I";"D"9";"J"8#;"@"C"9";"D"
E0C00F001FE0E00F018003607FE000FE0018003FF?"=$<$J">";&;"F";"8"<"<"9"=";&;"F"
FF07003FF8003F?1FF0003FFFFE0007C000F81FFFF8F0003FFFFE0007C0>"="H"F"=$9"8"<$G";"<$J"<$J"B"
01E03F0F3FFF0001F801FFF0FFE007FF809F801FFF0780007"G"<"J"A"E$<";"G$<"@"D$<"
3F7FFC5F07F0000000F800000003FFC0000000F=#=#>"J"E"F"E$D$E$D"
C003F006FEJFC3FF0FFFFE01FFFFC3FFFFE00>"=%>"J";">"E"F"D"<"B"E"C$
07F80200FF1F9F0FFFE7FF80101FE7F01FFFE"J"J"<$:"8"E"?"<"D"A"="E"J"
E09FF91F01FFFE03FFFF01FC03FEFFFF>7F=">$E"C"@"J"<"J"8">"J"F"
80FC0001C0E00380100907C0FC601FC7"<"I"<"J"C"G"D"G"8"C"8"
1F0F0F7FB8003FE0F3F8003FCF$>"J":"<"9"C"G"D"<"C"C"D$
FE000380:F80707C007FF1F03C00703FFF8"<"@"E"C"9"<$>"C";":"="C"J"C"F"9"P":"
F0000780C03F0FFFFCE01FFE03807F4E01FF007803F7"<"="A"J"@"C"H"C"J"C"F"9";"
0F1FFF07>1FF83FC0FF4F83FE00FC0H">"="J"@"C"H"B"9"G"C"J"
0FC0FF73FFCFFF00380FCFF41F";$>"J"A"9"B"A"="B"="C"B"9"C"
F8FE003F80DFC0FFE0107F80707FE01F8C0H">#;"C"9"<$>"B"<"B"B"J"B"E$9"
1FE00300807F7FFFF8FF03FCFC0F5FF0307FF803F7"E"F"J"A"A"I"B"H"9"A"J";":"
07C0018FF800FFE3F7F800F57FE01F"="J"B"A"I#@#9"H"A"G"
FC7FO#01F07FFFC001FF00F07F00<"A">";"H$9"=":"@#A">"@"J"@#9"G"
FC3FF0FEFFFFFE031FFC01FF0FE0077FC01FFF0FF7"<">"@";"C"B"?"@"="C"@">":"?"@"F#
03FFE0010300F0FF0FF8F83F0FF8FF0F0FFEJ"J"C"?"J"@"C"@"?"G"9"<":"
;F8>07803F5FEFFFCC03FFC01F00F";"A"D"J"C"?"J#>":"E":"?"J"
FEF87FFC80FE0FF5FF8003FE3FE0FF5037";"?"@"H"9"<"=";">">":"?">"J">";"B"
0101F000FE011F3FF807F01FE01F9F807E0F8H">"<"I"9"8"@#="J">"?"E#="G#9"
FFFC07FF3FE0FF803F7FEFF1FFF803F1FF007"F"E"J"="J#<"J";"="J"<"
FFF8F8GF0FF7FFC00351FF0FF60FF87":#J"="<"<"D"@"<";"?";";"<"I"E"
00F003O$7F7FFF1F3FFC7FFCFF0FFF1FE007G"?$:"B"9"<"8"B":#?"E#:#F":"<":#J"
F9FE007F0FFC03FFC0E003FFE0FF800FFF8007E003FF71F7";"?"J$F#9"J#8#A";"A#9"="B"9"
8007FDE800001FFF0FF;FFC003FF3FC0FFF0FFC0C03F<"J";"CP9$9Q>%AQB"8"=Q;Q=%>Z<Q
E04FFF0FFFFFFFFC0000FFF3FFFC0000F28"D"A":"J$J$J$
7FFF3F1FIFFFFFF>FFFFFF@FFFFFF="
0F7":"J":"
C0C0580E08":"J":"
3F1F51F3FJ":"
<C0C07#9"
E01F80="J#
3F9807F7#J"
F00F:0F8"J":#
079E000FF7":"
F8008":"J"8#
037F507FE017"J"
FC:F07#8"J#
FE01FE:FC03="J"8#
FF503F8077#J"
FF009F8J#
@F00F8&
807FFFFC01J#8#
<FC01E01F8#
C03F;#J#
F8039C03F8#J#
E01F8FE00;#J#8#
FFFF5FFFF807F8#
F00FJ#
@00FF8#
F8079"J#
03;FE018"J"
FC<FC8#J"
FE01<039"J#
00;F8078$J"
FF007F:F0:"J#
3F:E00F9#J#
801F:C01F9"J#
C0;803F9#J"
E00F;7F9#J"
F007:00:"J$
039FE00FF9#J#
F8019FC019"J#
FC:F8039#J"
FE00:079$J"
FF007F8F0;"J#
3F8E00F:#J#
801F8C01F:"J#
C09803F:#J"
E00F97F:#J"
F007800;"J$
037FE00FF:#J#
F8017FC01:#J#
FC007F803:$J#
FE007F6E007:$J#
FF003F6C00F;#J"
801F680<"J#
076001F;#J$
E0035FC007F;#J$
F0015F800FF;$J#
F8007F4F001;$J#
FE003F4E003;$J#
FF001F4C007<#J#
800F4801F<#I$
C007FE003F<#I$
E003FC007F<#I$
F000F800FF<$H#
FC007FF001<$H#
FE003FE003<$H#
FF000F800F=#G$
C003FE001F=#G$
E001F8003F=$F$
F0007FF0007F=$F$
F8001FC001FF=$E$
FC0007FE0003=$E$
FF0001FC000F>$D$
C0007FF0003F>$D$
F0003FC000FF>$D#
FC000F8001>$C$
FE0003FE0007>$C$
FF8000F8001F?$B$
E0003FC0003F?$A%
F80007FE0001FF?$A$
FE0000F00007?%@$
FF80001F80000F@$?%
C00003FC00003F@%>"8"
F000007FE0FF@"8"=%
FC03FE000001@%="8"
FF800000F01FA"8";#8"
F003FE007FA"8#9#8#
FF0003FC0007FFB"8&9"
C00001FFFC003FB"9$9#
FC00000003FFB#>"
FF801FC">"
F0FFC"="
FE03C#;#
FFFE07FFD#9#
FFFF07FFF%
FF0007FF
ENDBITMAP
%%EndBinary
0 0 0 1 0 0 0 K
339.33 693.33 527.33 693.33 2 L
4 H
2 Z
N
108 675 540 729 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "1" 22
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 22
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Helvetica
%%+ Helvetica-Bold
%%+ Times-BoldItalic
%%EOF
